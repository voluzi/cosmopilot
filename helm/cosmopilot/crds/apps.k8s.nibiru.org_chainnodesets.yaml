---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: chainnodesets.apps.k8s.nibiru.org
spec:
  group: apps.k8s.nibiru.org
  names:
    kind: ChainNodeSet
    listKind: ChainNodeSetList
    plural: chainnodesets
    singular: chainnodeset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .status.appVersion
      name: Version
      type: string
    - jsonPath: .status.chainID
      name: ChainID
      type: string
    - jsonPath: .status.latestHeight
      name: LatestHeight
      type: integer
    - jsonPath: .status.instances
      name: Instances
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: ChainNodeSet is the Schema for the chainnodesets API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ChainNodeSetSpec defines the desired state of ChainNode.
            properties:
              app:
                description: |-
                  Specifies image, version and binary name of the chain application to run. It also allows to schedule upgrades,
                  or setting/updating the image for an on-chain upgrade.
                properties:
                  app:
                    description: Binary name of the application to be run.
                    minLength: 1
                    type: string
                  checkGovUpgrades:
                    default: true
                    description: |-
                      Whether cosmopilot should query gov proposals to find and schedule upgrades.
                      Defaults to `true`.
                    type: boolean
                  image:
                    description: Container image to be used.
                    minLength: 1
                    type: string
                  imagePullPolicy:
                    description: |-
                      Indicates the desired pull policy when creating nodes. Defaults to `Always` if `version`
                      is `latest` and `IfNotPresent` otherwise.
                    type: string
                  sdkVersion:
                    default: v0.47
                    description: |-
                      SdkVersion specifies the version of cosmos-sdk used by this app.
                      Valid options are:
                      - "v0.47" (default)
                      - "v0.45"
                    enum:
                    - v0.45
                    - v0.47
                    type: string
                  upgrades:
                    description: List of upgrades to schedule for this node.
                    items:
                      description: UpgradeSpec represents a manual upgrade.
                      properties:
                        forceOnChain:
                          description: |-
                            Whether to force this upgrade to be processed as a gov planned upgrade.
                            Defaults to `false`.
                          type: boolean
                        height:
                          description: Height at which the upgrade should occur.
                          format: int64
                          type: integer
                        image:
                          description: Container image replacement to be used in the
                            upgrade.
                          type: string
                      required:
                      - height
                      - image
                      type: object
                    type: array
                  version:
                    default: latest
                    description: |-
                      Image tag to be used. Once there are completed or skipped upgrades this will be ignored.
                      For a new node that will be state-synced, this will be the version used during state-sync. Only after
                      that, the cosmopilot will switch to the version of last upgrade.
                      Defaults to `latest`.
                    type: string
                required:
                - app
                - image
                type: object
              cosmoseed:
                description: Allows deploying seed nodes using Cosmoseed.
                properties:
                  additionalSeeds:
                    description: |-
                      Additional seed nodes to append to the nodeâ€™s default seed list.
                      Comma-separated list in the format `nodeID@ip:port`.
                    type: string
                  allowNonRoutable:
                    default: false
                    description: |-
                      Used to enforce strict routability rules for peer addresses.
                      Set to false to only accept publicly routable IPs (recommended for public networks).
                      Set to true to allow local/private IPs (e.g., in testnets or dev environments).
                      Defaults to `false`.
                    type: boolean
                  dialWorkers:
                    default: 20
                    description: |-
                      Number of concurrent dialer workers used for outbound peer discovery.
                      Each worker fetches peers from the queue (`PeerQueueSize`) and attempts to dial them.
                      Higher values increase parallelism, but may increase CPU/network load.
                      Defaults to `20`.
                    type: integer
                  enabled:
                    description: |-
                      Whether to enable deployment of Cosmoseed.
                      If false or unset, no seed node instances will be created.
                    type: boolean
                  expose:
                    description: Configuration for exposing the P2P endpoint (e.g.,
                      via LoadBalancer or NodePort).
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to be appended to the p2p service.
                        type: object
                      p2p:
                        default: false
                        description: Whether to expose p2p endpoint for this node.
                          Defaults to `false`.
                        type: boolean
                      p2pServiceType:
                        default: NodePort
                        description: |-
                          P2pServiceType indicates how P2P port will be exposed.
                          Valid values are:
                          - `LoadBalancer`
                          - `NodePort` (default)
                        type: string
                    type: object
                  ingress:
                    description: Ingress configuration for cosmoseed nodes.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to be appended to the ingress.
                        type: object
                      disableTLS:
                        description: Whether to disable TLS on ingress resource.
                        type: boolean
                      host:
                        description: Host in which cosmoseed nodes will be exposed.
                        type: string
                      ingressClass:
                        default: nginx
                        description: IngressClass specifies the ingress class to be
                          used on ingresses
                        type: string
                      tlsSecretName:
                        description: Name of the secret containing TLS certificate.
                        type: string
                    required:
                    - host
                    type: object
                  instances:
                    default: 1
                    description: |-
                      Number of seed node instances to deploy.
                      Defaults to 1.
                    minimum: 0
                    type: integer
                  logLevel:
                    description: |-
                      Log level of cosmoseed.
                      Defaults to `info`.
                    type: string
                  maxInboundPeers:
                    default: 2000
                    description: |-
                      Maximum number of inbound P2P connections.
                      Defaults to `2000`.
                    type: integer
                  maxOutboundPeers:
                    default: 20
                    description: |-
                      Maximum number of outbound P2P connections.
                      Defaults to `20`.
                    type: integer
                  maxPacketMsgPayloadSize:
                    default: 1024
                    description: |-
                      Maximum size (in bytes) of packet message payloads over P2P.
                      Defaults to `1024`.
                    type: integer
                  peerQueueSize:
                    default: 1000
                    description: |-
                      Size of the internal peer queue used by dial workers in the PEX reactor.
                      This queue holds peers to be dialed; dial workers consume from it.
                      If the queue is full, new discovered peers may be discarded.
                      Use together with `DialWorkers` to control peer discovery throughput.
                      Defaults to `1000`.
                    type: integer
                  resources:
                    description: Compute Resources to be applied on the cosmoseed
                      container.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                type: object
              genesis:
                description: Indicates where this node will get the genesis from.
                  Can be omitted when .spec.validator.init is specified.
                properties:
                  chainID:
                    description: |-
                      The chain-id of the network. This is only used when useDataVolume is true. If not set, cosmopilot will download
                      the genesis and extract chain-id from it. If set, cosmopilot will not download it and use a container to download
                      the genesis directly into the volume instead. This is useful for huge genesis that might kill cosmopilot container
                      for using too much memory.
                    type: string
                  configMap:
                    description: |-
                      ConfigMap specifies a configmap to load the genesis from. It can also be used to specify the name of the
                      configmap to store the genesis when retrieving genesis using other methods.
                    type: string
                  fromNodeRPC:
                    description: Get the genesis from an existing node using its RPC
                      endpoint.
                    properties:
                      hostname:
                        description: Hostname or IP address of the RPC server.
                        minLength: 1
                        type: string
                      port:
                        default: 26657
                        description: TCP port used for RPC queries on the RPC server.
                          Defaults to `26657`.
                        type: integer
                      secure:
                        default: false
                        description: Defines protocol to use. Defaults to `false`.
                        type: boolean
                    required:
                    - hostname
                    type: object
                  genesisSHA:
                    description: SHA256 to validate the genesis.
                    type: string
                  url:
                    description: URL to download the genesis from.
                    type: string
                  useDataVolume:
                    description: |-
                      UseDataVolume indicates that cosmopilot should save the genesis in the same volume as node data
                      instead of a ConfigMap. This is useful for genesis whose size is bigger than ConfigMap limit of 1MiB.
                      Ignored when genesis source is a ConfigMap. Defaults to `false`.
                    type: boolean
                type: object
              ingresses:
                description: |-
                  List of ingresses to create for this ChainNodeSet. This allows to create ingresses targeting
                  multiple groups of nodes.
                items:
                  description: GlobalIngressConfig specifies configurations for ingress
                    to expose API endpoints of several groups of nodes.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations to be set on ingress resource.
                      type: object
                    disableTLS:
                      description: Whether to disable TLS on ingress resource.
                      type: boolean
                    enableEvmRPC:
                      description: Enable EVM RPC endpoint.
                      type: boolean
                    enableEvmRpcWS:
                      description: Enable EVM RPC Websocket endpoint.
                      type: boolean
                    enableGRPC:
                      description: Enable gRPC endpoint.
                      type: boolean
                    enableLCD:
                      description: Enable LCD endpoint.
                      type: boolean
                    enableRPC:
                      description: Enable RPC endpoint.
                      type: boolean
                    groups:
                      description: Groups of nodes to which this ingress will point
                        to.
                      items:
                        type: string
                      minItems: 1
                      type: array
                    grpcAnnotations:
                      additionalProperties:
                        type: string
                      description: |-
                        GrpcAnnotations to be set on grpc ingress resource.
                        Defaults to nginx annotation `nginx.ingress.kubernetes.io/backend-protocol: GRPC`
                        if nginx ingress class is used.
                      type: object
                    host:
                      description: |-
                        Host in which endpoints will be exposed. Endpoints are exposed on corresponding
                        subdomain of this host. An example host `nodes.example.com` will have endpoints exposed at
                        `rpc.nodes.example.com`, `grpc.nodes.example.com` and `lcd.nodes.example.com`.
                      type: string
                    ingressClass:
                      default: nginx
                      description: IngressClass specifies the ingress class to be
                        used on ingresses
                      type: string
                    name:
                      description: The name of this ingress.
                      minLength: 1
                      type: string
                    servicesOnly:
                      description: |-
                        ServicesOnly indicates that only global services should be created. No ingress resources will be created.
                        Useful for usage with custom controllers that have their own CRDs.
                      type: boolean
                    tlsSecretName:
                      description: Name of the secret containing TLS certificate.
                      type: string
                    useInternalServices:
                      default: false
                      description: |-
                        UseInternalServices configures Ingress to route traffic directly to the node services,
                        bypassing Cosmoguard and any readiness checks. This is only recommended for debugging
                        or for private/internal traffic (e.g., when accessing the cluster over a VPN).
                      type: boolean
                  required:
                  - groups
                  - host
                  - name
                  type: object
                type: array
              nodes:
                description: List of groups of ChainNodes to be run.
                items:
                  description: NodeGroupSpec sets chainnode configurations for a group.
                  properties:
                    affinity:
                      description: If specified, the pod's scheduling constraints.
                      properties:
                        nodeAffinity:
                          description: Describes node affinity scheduling rules for
                            the pod.
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: |-
                                The scheduler will prefer to schedule pods to nodes that satisfy
                                the affinity expressions specified by this field, but it may choose
                                a node that violates one or more of the expressions. The node that is
                                most preferred is the one with the greatest sum of weights, i.e.
                                for each node that meets all of the scheduling requirements (resource
                                request, requiredDuringScheduling affinity expressions, etc.),
                                compute a sum by iterating through the elements of this field and adding
                                "weight" to the sum if the node matches the corresponding matchExpressions; the
                                node(s) with the highest sum are the most preferred.
                              items:
                                description: |-
                                  An empty preferred scheduling term matches all objects with implicit weight 0
                                  (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                properties:
                                  preference:
                                    description: A node selector term, associated
                                      with the corresponding weight.
                                    properties:
                                      matchExpressions:
                                        description: A list of node selector requirements
                                          by node's labels.
                                        items:
                                          description: |-
                                            A node selector requirement is a selector that contains values, a key, and an operator
                                            that relates the key and values.
                                          properties:
                                            key:
                                              description: The label key that the
                                                selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                Represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                              type: string
                                            values:
                                              description: |-
                                                An array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. If the operator is Gt or Lt, the values
                                                array must have a single element, which will be interpreted as an integer.
                                                This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchFields:
                                        description: A list of node selector requirements
                                          by node's fields.
                                        items:
                                          description: |-
                                            A node selector requirement is a selector that contains values, a key, and an operator
                                            that relates the key and values.
                                          properties:
                                            key:
                                              description: The label key that the
                                                selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                Represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                              type: string
                                            values:
                                              description: |-
                                                An array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. If the operator is Gt or Lt, the values
                                                array must have a single element, which will be interpreted as an integer.
                                                This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  weight:
                                    description: Weight associated with matching the
                                      corresponding nodeSelectorTerm, in the range
                                      1-100.
                                    format: int32
                                    type: integer
                                required:
                                - preference
                                - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: |-
                                If the affinity requirements specified by this field are not met at
                                scheduling time, the pod will not be scheduled onto the node.
                                If the affinity requirements specified by this field cease to be met
                                at some point during pod execution (e.g. due to an update), the system
                                may or may not try to eventually evict the pod from its node.
                              properties:
                                nodeSelectorTerms:
                                  description: Required. A list of node selector terms.
                                    The terms are ORed.
                                  items:
                                    description: |-
                                      A null or empty node selector term matches no objects. The requirements of
                                      them are ANDed.
                                      The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                    properties:
                                      matchExpressions:
                                        description: A list of node selector requirements
                                          by node's labels.
                                        items:
                                          description: |-
                                            A node selector requirement is a selector that contains values, a key, and an operator
                                            that relates the key and values.
                                          properties:
                                            key:
                                              description: The label key that the
                                                selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                Represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                              type: string
                                            values:
                                              description: |-
                                                An array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. If the operator is Gt or Lt, the values
                                                array must have a single element, which will be interpreted as an integer.
                                                This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchFields:
                                        description: A list of node selector requirements
                                          by node's fields.
                                        items:
                                          description: |-
                                            A node selector requirement is a selector that contains values, a key, and an operator
                                            that relates the key and values.
                                          properties:
                                            key:
                                              description: The label key that the
                                                selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                Represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                              type: string
                                            values:
                                              description: |-
                                                An array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. If the operator is Gt or Lt, the values
                                                array must have a single element, which will be interpreted as an integer.
                                                This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              required:
                              - nodeSelectorTerms
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        podAffinity:
                          description: Describes pod affinity scheduling rules (e.g.
                            co-locate this pod in the same node, zone, etc. as some
                            other pod(s)).
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: |-
                                The scheduler will prefer to schedule pods to nodes that satisfy
                                the affinity expressions specified by this field, but it may choose
                                a node that violates one or more of the expressions. The node that is
                                most preferred is the one with the greatest sum of weights, i.e.
                                for each node that meets all of the scheduling requirements (resource
                                request, requiredDuringScheduling affinity expressions, etc.),
                                compute a sum by iterating through the elements of this field and adding
                                "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                node(s) with the highest sum are the most preferred.
                              items:
                                description: The weights of all of the matched WeightedPodAffinityTerm
                                  fields are added per-node to find the most preferred
                                  node(s)
                                properties:
                                  podAffinityTerm:
                                    description: Required. A pod affinity term, associated
                                      with the corresponding weight.
                                    properties:
                                      labelSelector:
                                        description: |-
                                          A label query over a set of resources, in this case pods.
                                          If it's null, this PodAffinityTerm matches with no Pods.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      matchLabelKeys:
                                        description: |-
                                          MatchLabelKeys is a set of pod label keys to select which pods will
                                          be taken into consideration. The keys are used to lookup values from the
                                          incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                          to select the group of existing pods which pods will be taken into consideration
                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                          pod labels will be ignored. The default value is empty.
                                          The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                          Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                          This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      mismatchLabelKeys:
                                        description: |-
                                          MismatchLabelKeys is a set of pod label keys to select which pods will
                                          be taken into consideration. The keys are used to lookup values from the
                                          incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                          to select the group of existing pods which pods will be taken into consideration
                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                          pod labels will be ignored. The default value is empty.
                                          The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                          Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                          This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      namespaceSelector:
                                        description: |-
                                          A label query over the set of namespaces that the term applies to.
                                          The term is applied to the union of the namespaces selected by this field
                                          and the ones listed in the namespaces field.
                                          null selector and null or empty namespaces list means "this pod's namespace".
                                          An empty selector ({}) matches all namespaces.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      namespaces:
                                        description: |-
                                          namespaces specifies a static list of namespace names that the term applies to.
                                          The term is applied to the union of the namespaces listed in this field
                                          and the ones selected by namespaceSelector.
                                          null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        description: |-
                                          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                          the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                          whose value of the label with key topologyKey matches that of any node on which any of the
                                          selected pods is running.
                                          Empty topologyKey is not allowed.
                                        type: string
                                    required:
                                    - topologyKey
                                    type: object
                                  weight:
                                    description: |-
                                      weight associated with matching the corresponding podAffinityTerm,
                                      in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                - podAffinityTerm
                                - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: |-
                                If the affinity requirements specified by this field are not met at
                                scheduling time, the pod will not be scheduled onto the node.
                                If the affinity requirements specified by this field cease to be met
                                at some point during pod execution (e.g. due to a pod label update), the
                                system may or may not try to eventually evict the pod from its node.
                                When there are multiple elements, the lists of nodes corresponding to each
                                podAffinityTerm are intersected, i.e. all terms must be satisfied.
                              items:
                                description: |-
                                  Defines a set of pods (namely those matching the labelSelector
                                  relative to the given namespace(s)) that this pod should be
                                  co-located (affinity) or not co-located (anti-affinity) with,
                                  where co-located is defined as running on a node whose value of
                                  the label with key <topologyKey> matches that of any node on which
                                  a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: |-
                                      A label query over a set of resources, in this case pods.
                                      If it's null, this PodAffinityTerm matches with no Pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  matchLabelKeys:
                                    description: |-
                                      MatchLabelKeys is a set of pod label keys to select which pods will
                                      be taken into consideration. The keys are used to lookup values from the
                                      incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                      to select the group of existing pods which pods will be taken into consideration
                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                      pod labels will be ignored. The default value is empty.
                                      The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                      Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                      This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  mismatchLabelKeys:
                                    description: |-
                                      MismatchLabelKeys is a set of pod label keys to select which pods will
                                      be taken into consideration. The keys are used to lookup values from the
                                      incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                      to select the group of existing pods which pods will be taken into consideration
                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                      pod labels will be ignored. The default value is empty.
                                      The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                      Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                      This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  namespaceSelector:
                                    description: |-
                                      A label query over the set of namespaces that the term applies to.
                                      The term is applied to the union of the namespaces selected by this field
                                      and the ones listed in the namespaces field.
                                      null selector and null or empty namespaces list means "this pod's namespace".
                                      An empty selector ({}) matches all namespaces.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: |-
                                      namespaces specifies a static list of namespace names that the term applies to.
                                      The term is applied to the union of the namespaces listed in this field
                                      and the ones selected by namespaceSelector.
                                      null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: |-
                                      This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                      the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                      whose value of the label with key topologyKey matches that of any node on which any of the
                                      selected pods is running.
                                      Empty topologyKey is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              type: array
                          type: object
                        podAntiAffinity:
                          description: Describes pod anti-affinity scheduling rules
                            (e.g. avoid putting this pod in the same node, zone, etc.
                            as some other pod(s)).
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              description: |-
                                The scheduler will prefer to schedule pods to nodes that satisfy
                                the anti-affinity expressions specified by this field, but it may choose
                                a node that violates one or more of the expressions. The node that is
                                most preferred is the one with the greatest sum of weights, i.e.
                                for each node that meets all of the scheduling requirements (resource
                                request, requiredDuringScheduling anti-affinity expressions, etc.),
                                compute a sum by iterating through the elements of this field and adding
                                "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                node(s) with the highest sum are the most preferred.
                              items:
                                description: The weights of all of the matched WeightedPodAffinityTerm
                                  fields are added per-node to find the most preferred
                                  node(s)
                                properties:
                                  podAffinityTerm:
                                    description: Required. A pod affinity term, associated
                                      with the corresponding weight.
                                    properties:
                                      labelSelector:
                                        description: |-
                                          A label query over a set of resources, in this case pods.
                                          If it's null, this PodAffinityTerm matches with no Pods.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      matchLabelKeys:
                                        description: |-
                                          MatchLabelKeys is a set of pod label keys to select which pods will
                                          be taken into consideration. The keys are used to lookup values from the
                                          incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                          to select the group of existing pods which pods will be taken into consideration
                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                          pod labels will be ignored. The default value is empty.
                                          The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                          Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                          This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      mismatchLabelKeys:
                                        description: |-
                                          MismatchLabelKeys is a set of pod label keys to select which pods will
                                          be taken into consideration. The keys are used to lookup values from the
                                          incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                          to select the group of existing pods which pods will be taken into consideration
                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                          pod labels will be ignored. The default value is empty.
                                          The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                          Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                          This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      namespaceSelector:
                                        description: |-
                                          A label query over the set of namespaces that the term applies to.
                                          The term is applied to the union of the namespaces selected by this field
                                          and the ones listed in the namespaces field.
                                          null selector and null or empty namespaces list means "this pod's namespace".
                                          An empty selector ({}) matches all namespaces.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The
                                              requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                              - key
                                              - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      namespaces:
                                        description: |-
                                          namespaces specifies a static list of namespace names that the term applies to.
                                          The term is applied to the union of the namespaces listed in this field
                                          and the ones selected by namespaceSelector.
                                          null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        description: |-
                                          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                          the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                          whose value of the label with key topologyKey matches that of any node on which any of the
                                          selected pods is running.
                                          Empty topologyKey is not allowed.
                                        type: string
                                    required:
                                    - topologyKey
                                    type: object
                                  weight:
                                    description: |-
                                      weight associated with matching the corresponding podAffinityTerm,
                                      in the range 1-100.
                                    format: int32
                                    type: integer
                                required:
                                - podAffinityTerm
                                - weight
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              description: |-
                                If the anti-affinity requirements specified by this field are not met at
                                scheduling time, the pod will not be scheduled onto the node.
                                If the anti-affinity requirements specified by this field cease to be met
                                at some point during pod execution (e.g. due to a pod label update), the
                                system may or may not try to eventually evict the pod from its node.
                                When there are multiple elements, the lists of nodes corresponding to each
                                podAffinityTerm are intersected, i.e. all terms must be satisfied.
                              items:
                                description: |-
                                  Defines a set of pods (namely those matching the labelSelector
                                  relative to the given namespace(s)) that this pod should be
                                  co-located (affinity) or not co-located (anti-affinity) with,
                                  where co-located is defined as running on a node whose value of
                                  the label with key <topologyKey> matches that of any node on which
                                  a pod of the set of pods is running
                                properties:
                                  labelSelector:
                                    description: |-
                                      A label query over a set of resources, in this case pods.
                                      If it's null, this PodAffinityTerm matches with no Pods.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  matchLabelKeys:
                                    description: |-
                                      MatchLabelKeys is a set of pod label keys to select which pods will
                                      be taken into consideration. The keys are used to lookup values from the
                                      incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                      to select the group of existing pods which pods will be taken into consideration
                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                      pod labels will be ignored. The default value is empty.
                                      The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                      Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                      This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  mismatchLabelKeys:
                                    description: |-
                                      MismatchLabelKeys is a set of pod label keys to select which pods will
                                      be taken into consideration. The keys are used to lookup values from the
                                      incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                      to select the group of existing pods which pods will be taken into consideration
                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                      pod labels will be ignored. The default value is empty.
                                      The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                      Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                      This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  namespaceSelector:
                                    description: |-
                                      A label query over the set of namespaces that the term applies to.
                                      The term is applied to the union of the namespaces selected by this field
                                      and the ones listed in the namespaces field.
                                      null selector and null or empty namespaces list means "this pod's namespace".
                                      An empty selector ({}) matches all namespaces.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of
                                          label selector requirements. The requirements
                                          are ANDed.
                                        items:
                                          description: |-
                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                            relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that
                                                the selector applies to.
                                              type: string
                                            operator:
                                              description: |-
                                                operator represents a key's relationship to a set of values.
                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: |-
                                                values is an array of string values. If the operator is In or NotIn,
                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                the values array must be empty. This array is replaced during a strategic
                                                merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                          - key
                                          - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: |-
                                      namespaces specifies a static list of namespace names that the term applies to.
                                      The term is applied to the union of the namespaces listed in this field
                                      and the ones selected by namespaceSelector.
                                      null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    description: |-
                                      This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                      the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                      whose value of the label with key topologyKey matches that of any node on which any of the
                                      selected pods is running.
                                      Empty topologyKey is not allowed.
                                    type: string
                                required:
                                - topologyKey
                                type: object
                              type: array
                          type: object
                      type: object
                    config:
                      description: Specific configurations for these nodes.
                      properties:
                        blockThreshold:
                          default: 15s
                          description: |-
                            The time to wait for a block before considering node unhealthy.
                            Defaults to `15s`.
                          format: duration
                          type: string
                        cosmoGuard:
                          description: Deploys CosmoGuard to protect API endpoints
                            of the node.
                          properties:
                            config:
                              description: ConfigMap containing the CosmoGuard configuration
                                for this node.
                              properties:
                                key:
                                  description: The key to select.
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                optional:
                                  description: Specify whether the ConfigMap or its
                                    key must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                              x-kubernetes-map-type: atomic
                            enable:
                              description: Whether to enable CosmoGuard on this node.
                              type: boolean
                            resources:
                              description: Compute Resources for CosmoGuard container.
                              properties:
                                claims:
                                  description: |-
                                    Claims lists the names of resources, defined in spec.resourceClaims,
                                    that are used by this container.

                                    This is an alpha field and requires enabling the
                                    DynamicResourceAllocation feature gate.

                                    This field is immutable. It can only be set for containers.
                                  items:
                                    description: ResourceClaim references one entry
                                      in PodSpec.ResourceClaims.
                                    properties:
                                      name:
                                        description: |-
                                          Name must match the name of one entry in pod.spec.resourceClaims of
                                          the Pod where this field is used. It makes that resource available
                                          inside a container.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                              type: object
                            restartPodOnFailure:
                              description: Whether the node's pod should be restarted
                                when CosmoGuard fails.
                              type: boolean
                          required:
                          - config
                          - enable
                          type: object
                        dashedConfigToml:
                          description: Whether field naming in config.toml should
                            use dashes instead of underscores. Defaults to `false`.
                          type: boolean
                        env:
                          description: List of environment variables to set in the
                            app container.
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: |-
                                  Variable references $(VAR_NAME) are expanded
                                  using the previously defined environment variables in the container and
                                  any service environment variables. If a variable cannot be resolved,
                                  the reference in the input string will be unchanged. Double $$ are reduced
                                  to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                  "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                  Escaped references will never be expanded, regardless of whether the variable
                                  exists or not.
                                  Defaults to "".
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  fieldRef:
                                    description: |-
                                      Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                      spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  resourceFieldRef:
                                    description: |-
                                      Selects a resource of the container: only resources limits and requests
                                      (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        evmEnabled:
                          description: Whether EVM is enabled on this node. Will add
                            evm-rpc port to services. Defaults to `false`.
                          type: boolean
                        haltHeight:
                          description: |-
                            The block height at which the node should stop.
                            Cosmopilot will not attempt to restart the node beyond this height.
                          format: int64
                          type: integer
                        ignoreSyncing:
                          description: |-
                            Marks the node as ready even when it is catching up. This is useful when a chain
                            is halted, but you still need the node to be ready for querying existing data.
                            Defaults to `false`.
                          type: boolean
                        imagePullSecrets:
                          description: Optional list of references to secrets in the
                            same namespace to use for pulling any of the images used
                            by this node.
                          items:
                            description: |-
                              LocalObjectReference contains enough information to let you locate the
                              referenced object inside the same namespace.
                            properties:
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          type: array
                        nodeUtilsLogLevel:
                          description: Log level for node-utils container. Defaults
                            to `info`.
                          type: string
                        nodeUtilsResources:
                          description: Compute Resources for node-utils container.
                          properties:
                            claims:
                              description: |-
                                Claims lists the names of resources, defined in spec.resourceClaims,
                                that are used by this container.

                                This is an alpha field and requires enabling the
                                DynamicResourceAllocation feature gate.

                                This field is immutable. It can only be set for containers.
                              items:
                                description: ResourceClaim references one entry in
                                  PodSpec.ResourceClaims.
                                properties:
                                  name:
                                    description: |-
                                      Name must match the name of one entry in pod.spec.resourceClaims of
                                      the Pod where this field is used. It makes that resource available
                                      inside a container.
                                    type: string
                                required:
                                - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                              - name
                              x-kubernetes-list-type: map
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Limits describes the maximum amount of compute resources allowed.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: |-
                                Requests describes the minimum amount of compute resources required.
                                If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                              type: object
                          type: object
                        override:
                          description: Allows overriding configs on `.toml` configuration
                            files.
                          x-kubernetes-preserve-unknown-fields: true
                        persistAddressBook:
                          description: Whether to persist address book file in data
                            directory. Defaults to `false`.
                          type: boolean
                        reconcilePeriod:
                          default: 15s
                          description: |-
                            Period at which a reconcile loop will happen for this ChainNode.
                            Defaults to `15s`.
                          format: duration
                          type: string
                        runFlags:
                          description: List of flags to be appended to app container
                            when starting the node.
                          items:
                            type: string
                          type: array
                        safeToEvict:
                          description: |-
                            SafeToEvict sets cluster-autoscaler.kubernetes.io/safe-to-evict annotation to the given value. It allows/disallows
                            cluster-autoscaler to evict this node's pod.
                          type: boolean
                        seedMode:
                          default: false
                          description: Configures this node to run on seed mode. Defaults
                            to `false`.
                          type: boolean
                        sidecars:
                          description: Allows configuring additional containers to
                            run alongside the node.
                          items:
                            description: SidecarSpec allows configuring additional
                              containers to run alongside the node.
                            properties:
                              args:
                                description: Args to be passed to this container.
                                  Defaults to cmd defined in image.
                                items:
                                  type: string
                                type: array
                              command:
                                description: Command to be run by this container.
                                  Defaults to entrypoint defined in image.
                                items:
                                  type: string
                                type: array
                              env:
                                description: Environment variables to be passed to
                                  this container.
                                items:
                                  description: EnvVar represents an environment variable
                                    present in a Container.
                                  properties:
                                    name:
                                      description: Name of the environment variable.
                                        Must be a C_IDENTIFIER.
                                      type: string
                                    value:
                                      description: |-
                                        Variable references $(VAR_NAME) are expanded
                                        using the previously defined environment variables in the container and
                                        any service environment variables. If a variable cannot be resolved,
                                        the reference in the input string will be unchanged. Double $$ are reduced
                                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                        Escaped references will never be expanded, regardless of whether the variable
                                        exists or not.
                                        Defaults to "".
                                      type: string
                                    valueFrom:
                                      description: Source for the environment variable's
                                        value. Cannot be used if value is not empty.
                                      properties:
                                        configMapKeyRef:
                                          description: Selects a key of a ConfigMap.
                                          properties:
                                            key:
                                              description: The key to select.
                                              type: string
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                            optional:
                                              description: Specify whether the ConfigMap
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        fieldRef:
                                          description: |-
                                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                          properties:
                                            apiVersion:
                                              description: Version of the schema the
                                                FieldPath is written in terms of,
                                                defaults to "v1".
                                              type: string
                                            fieldPath:
                                              description: Path of the field to select
                                                in the specified API version.
                                              type: string
                                          required:
                                          - fieldPath
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        resourceFieldRef:
                                          description: |-
                                            Selects a resource of the container: only resources limits and requests
                                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                          properties:
                                            containerName:
                                              description: 'Container name: required
                                                for volumes, optional for env vars'
                                              type: string
                                            divisor:
                                              anyOf:
                                              - type: integer
                                              - type: string
                                              description: Specifies the output format
                                                of the exposed resources, defaults
                                                to "1"
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            resource:
                                              description: 'Required: resource to
                                                select'
                                              type: string
                                          required:
                                          - resource
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        secretKeyRef:
                                          description: Selects a key of a secret in
                                            the pod's namespace
                                          properties:
                                            key:
                                              description: The key of the secret to
                                                select from.  Must be a valid secret
                                                key.
                                              type: string
                                            name:
                                              description: |-
                                                Name of the referent.
                                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                              type: string
                                            optional:
                                              description: Specify whether the Secret
                                                or its key must be defined
                                              type: boolean
                                          required:
                                          - key
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                  required:
                                  - name
                                  type: object
                                type: array
                              image:
                                description: |-
                                  Container image to be used.
                                  Defaults to app image being used by ChainNode.
                                minLength: 1
                                type: string
                              imagePullPolicy:
                                description: |-
                                  Indicates the desired pull policy when creating nodes. Defaults to `Always` if `version`
                                  is `latest` and `IfNotPresent` otherwise.
                                type: string
                              mountConfig:
                                description: Directory where config files from ConfigMap
                                  will be mounted on this container. They are not
                                  mounted if not specified.
                                type: string
                              mountDataVolume:
                                description: Where data volume will be mounted on
                                  this container. It is not mounted if not specified.
                                type: string
                              name:
                                description: Name to be assigned to the container.
                                minLength: 1
                                type: string
                              resources:
                                description: Compute Resources for the sidecar container.
                                properties:
                                  claims:
                                    description: |-
                                      Claims lists the names of resources, defined in spec.resourceClaims,
                                      that are used by this container.

                                      This is an alpha field and requires enabling the
                                      DynamicResourceAllocation feature gate.

                                      This field is immutable. It can only be set for containers.
                                    items:
                                      description: ResourceClaim references one entry
                                        in PodSpec.ResourceClaims.
                                      properties:
                                        name:
                                          description: |-
                                            Name must match the name of one entry in pod.spec.resourceClaims of
                                            the Pod where this field is used. It makes that resource available
                                            inside a container.
                                          type: string
                                      required:
                                      - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - name
                                    x-kubernetes-list-type: map
                                  limits:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Limits describes the maximum amount of compute resources allowed.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                  requests:
                                    additionalProperties:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    description: |-
                                      Requests describes the minimum amount of compute resources required.
                                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    type: object
                                type: object
                              restartPodOnFailure:
                                description: Whether the pod of this node should be
                                  restarted when this sidecar container fails. Defaults
                                  to `false`.
                                type: boolean
                              runBeforeNode:
                                description: |-
                                  When enabled, this container turns into an init container instead of a sidecar
                                  as it will have to finish before the node container starts. Defaults to `false`.
                                type: boolean
                              securityContext:
                                description: Security options the container should
                                  be run with.
                                properties:
                                  allowPrivilegeEscalation:
                                    description: |-
                                      AllowPrivilegeEscalation controls whether a process can gain more
                                      privileges than its parent process. This bool directly controls if
                                      the no_new_privs flag will be set on the container process.
                                      AllowPrivilegeEscalation is true always when the container is:
                                      1) run as Privileged
                                      2) has CAP_SYS_ADMIN
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: boolean
                                  capabilities:
                                    description: |-
                                      The capabilities to add/drop when running containers.
                                      Defaults to the default set of capabilities granted by the container runtime.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      add:
                                        description: Added capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                      drop:
                                        description: Removed capabilities
                                        items:
                                          description: Capability represent POSIX
                                            capabilities type
                                          type: string
                                        type: array
                                    type: object
                                  privileged:
                                    description: |-
                                      Run container in privileged mode.
                                      Processes in privileged containers are essentially equivalent to root on the host.
                                      Defaults to false.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: boolean
                                  procMount:
                                    description: |-
                                      procMount denotes the type of proc mount to use for the containers.
                                      The default is DefaultProcMount which uses the container runtime defaults for
                                      readonly paths and masked paths.
                                      This requires the ProcMountType feature flag to be enabled.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: string
                                  readOnlyRootFilesystem:
                                    description: |-
                                      Whether this container has a read-only root filesystem.
                                      Default is false.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    type: boolean
                                  runAsGroup:
                                    description: |-
                                      The GID to run the entrypoint of the container process.
                                      Uses runtime default if unset.
                                      May also be set in PodSecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  runAsNonRoot:
                                    description: |-
                                      Indicates that the container must run as a non-root user.
                                      If true, the Kubelet will validate the image at runtime to ensure that it
                                      does not run as UID 0 (root) and fail to start the container if it does.
                                      If unset or false, no such validation will be performed.
                                      May also be set in PodSecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    type: boolean
                                  runAsUser:
                                    description: |-
                                      The UID to run the entrypoint of the container process.
                                      Defaults to user specified in image metadata if unspecified.
                                      May also be set in PodSecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    format: int64
                                    type: integer
                                  seLinuxOptions:
                                    description: |-
                                      The SELinux context to be applied to the container.
                                      If unspecified, the container runtime will allocate a random SELinux context for each
                                      container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                      PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      level:
                                        description: Level is SELinux level label
                                          that applies to the container.
                                        type: string
                                      role:
                                        description: Role is a SELinux role label
                                          that applies to the container.
                                        type: string
                                      type:
                                        description: Type is a SELinux type label
                                          that applies to the container.
                                        type: string
                                      user:
                                        description: User is a SELinux user label
                                          that applies to the container.
                                        type: string
                                    type: object
                                  seccompProfile:
                                    description: |-
                                      The seccomp options to use by this container. If seccomp options are
                                      provided at both the pod & container level, the container options
                                      override the pod options.
                                      Note that this field cannot be set when spec.os.name is windows.
                                    properties:
                                      localhostProfile:
                                        description: |-
                                          localhostProfile indicates a profile defined in a file on the node should be used.
                                          The profile must be preconfigured on the node to work.
                                          Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                          Must be set if type is "Localhost". Must NOT be set for any other type.
                                        type: string
                                      type:
                                        description: |-
                                          type indicates which kind of seccomp profile will be applied.
                                          Valid options are:

                                          Localhost - a profile defined in a file on the node should be used.
                                          RuntimeDefault - the container runtime default profile should be used.
                                          Unconfined - no profile should be applied.
                                        type: string
                                    required:
                                    - type
                                    type: object
                                  windowsOptions:
                                    description: |-
                                      The Windows specific settings applied to all containers.
                                      If unspecified, the options from the PodSecurityContext will be used.
                                      If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      Note that this field cannot be set when spec.os.name is linux.
                                    properties:
                                      gmsaCredentialSpec:
                                        description: |-
                                          GMSACredentialSpec is where the GMSA admission webhook
                                          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                          GMSA credential spec named by the GMSACredentialSpecName field.
                                        type: string
                                      gmsaCredentialSpecName:
                                        description: GMSACredentialSpecName is the
                                          name of the GMSA credential spec to use.
                                        type: string
                                      hostProcess:
                                        description: |-
                                          HostProcess determines if a container should be run as a 'Host Process' container.
                                          All of a Pod's containers must have the same effective HostProcess value
                                          (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                          In addition, if HostProcess is true then HostNetwork must also be set to true.
                                        type: boolean
                                      runAsUserName:
                                        description: |-
                                          The UserName in Windows to run the entrypoint of the container process.
                                          Defaults to the user specified in image metadata if unspecified.
                                          May also be set in PodSecurityContext. If set in both SecurityContext and
                                          PodSecurityContext, the value specified in SecurityContext takes precedence.
                                        type: string
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        startupTime:
                          default: 1h
                          description: |-
                            The time after which a node will be restarted if it does not start properly.
                            Defaults to `1h`.
                          format: duration
                          type: string
                        stateSync:
                          description: Allows configuring this node to perform state-sync
                            snapshots.
                          properties:
                            snapshotInterval:
                              description: Block interval at which local state sync
                                snapshots are taken (0 to disable).
                              type: integer
                            snapshotKeepRecent:
                              description: Number of recent snapshots to keep and
                                serve (0 to keep all). Defaults to 2.
                              type: integer
                          required:
                          - snapshotInterval
                          type: object
                        terminationGracePeriodSeconds:
                          description: Optional duration in seconds the pod needs
                            to terminate gracefully.
                          format: int64
                          type: integer
                        volumes:
                          description: Additional volumes to be created and mounted
                            on this node.
                          items:
                            description: VolumeSpec describes an additional volume
                              to mount on a node.
                            properties:
                              deleteWithNode:
                                description: Whether this volume should be deleted
                                  when node is deleted. Defaults to `false`.
                                type: boolean
                              name:
                                description: The name of the volume.
                                type: string
                              path:
                                description: Path specifies where this volume should
                                  be mounted.
                                type: string
                              size:
                                description: Size of the volume.
                                type: string
                              storageClass:
                                description: Name of the storage class to use for
                                  this volume. Uses the default class if not specified.
                                type: string
                            required:
                            - name
                            - path
                            - size
                            type: object
                          type: array
                      type: object
                    expose:
                      description: Allows exposing P2P traffic to public.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations to be appended to the p2p service.
                          type: object
                        p2p:
                          default: false
                          description: Whether to expose p2p endpoint for this node.
                            Defaults to `false`.
                          type: boolean
                        p2pServiceType:
                          default: NodePort
                          description: |-
                            P2pServiceType indicates how P2P port will be exposed.
                            Valid values are:
                            - `LoadBalancer`
                            - `NodePort` (default)
                          type: string
                      type: object
                    ignoreGroupOnDisruptionChecks:
                      description: |-
                        Whether ChainNodeSet group label should be ignored on pod disruption checks.
                        This is useful to ensure no downtime globally or per global ingress, instead of just per group.
                        Defaults to `false`.
                      type: boolean
                    individualIngresses:
                      description: |-
                        IndividualIngresses defines configuration for exposing API endpoints through separate
                        Ingress resources per node in the set. Each Ingress routes traffic directly to its
                        corresponding node's Service (i.e., no load balancing across nodes).

                        The same IngressConfig is reused for all nodes, but the `host` field will be prefixed
                        with the node index to generate unique subdomains. For example, if
                        `host = "fullnodes.cosmopilot.local"`, then node ingress domains will be:
                          - 0.fullnodes.cosmopilot.local
                          - 1.fullnodes.cosmopilot.local
                          - etc.

                        This mode allows targeting specific nodes individually.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations to be appended to the ingress.
                          type: object
                        disableTLS:
                          description: Whether to disable TLS on ingress resource.
                          type: boolean
                        enableEvmRPC:
                          description: Enable EVM RPC endpoint.
                          type: boolean
                        enableEvmRpcWS:
                          description: Enable EVM RPC Websocket endpoint.
                          type: boolean
                        enableGRPC:
                          description: Enable gRPC endpoint.
                          type: boolean
                        enableLCD:
                          description: Enable LCD endpoint.
                          type: boolean
                        enableRPC:
                          description: Enable RPC endpoint.
                          type: boolean
                        grpcAnnotations:
                          additionalProperties:
                            type: string
                          description: |-
                            GrpcAnnotations to be set on grpc ingress resource.
                            Defaults to nginx annotation `nginx.ingress.kubernetes.io/backend-protocol: GRPC`
                            if nginx ingress class is used.
                          type: object
                        host:
                          description: |-
                            Host in which endpoints will be exposed. Endpoints are exposed on corresponding
                            subdomain of this host. An example host `nodes.example.com` will have endpoints exposed at
                            `rpc.nodes.example.com`, `grpc.nodes.example.com` and `lcd.nodes.example.com`.
                          type: string
                        ingressClass:
                          default: nginx
                          description: IngressClass specifies the ingress class to
                            be used on ingresses
                          type: string
                        tlsSecretName:
                          description: Name of the secret containing TLS certificate.
                          type: string
                        useInternalServices:
                          default: false
                          description: |-
                            UseInternalServices configures Ingress to route traffic directly to the node services,
                            bypassing Cosmoguard and any readiness checks. This is only recommended for debugging
                            or for private/internal traffic (e.g., when accessing the cluster over a VPN).
                          type: boolean
                      required:
                      - host
                      type: object
                    ingress:
                      description: |-
                        Ingress defines configuration for exposing API endpoints through a single shared Ingress,
                        which routes traffic to the group Service backing all nodes in this set. This results in
                        load-balanced access across all nodes (e.g., round-robin).
                        See IngressConfig for detailed endpoint and TLS settings.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations to be appended to the ingress.
                          type: object
                        disableTLS:
                          description: Whether to disable TLS on ingress resource.
                          type: boolean
                        enableEvmRPC:
                          description: Enable EVM RPC endpoint.
                          type: boolean
                        enableEvmRpcWS:
                          description: Enable EVM RPC Websocket endpoint.
                          type: boolean
                        enableGRPC:
                          description: Enable gRPC endpoint.
                          type: boolean
                        enableLCD:
                          description: Enable LCD endpoint.
                          type: boolean
                        enableRPC:
                          description: Enable RPC endpoint.
                          type: boolean
                        grpcAnnotations:
                          additionalProperties:
                            type: string
                          description: |-
                            GrpcAnnotations to be set on grpc ingress resource.
                            Defaults to nginx annotation `nginx.ingress.kubernetes.io/backend-protocol: GRPC`
                            if nginx ingress class is used.
                          type: object
                        host:
                          description: |-
                            Host in which endpoints will be exposed. Endpoints are exposed on corresponding
                            subdomain of this host. An example host `nodes.example.com` will have endpoints exposed at
                            `rpc.nodes.example.com`, `grpc.nodes.example.com` and `lcd.nodes.example.com`.
                          type: string
                        ingressClass:
                          default: nginx
                          description: IngressClass specifies the ingress class to
                            be used on ingresses
                          type: string
                        tlsSecretName:
                          description: Name of the secret containing TLS certificate.
                          type: string
                        useInternalServices:
                          default: false
                          description: |-
                            UseInternalServices configures Ingress to route traffic directly to the node services,
                            bypassing Cosmoguard and any readiness checks. This is only recommended for debugging
                            or for private/internal traffic (e.g., when accessing the cluster over a VPN).
                          type: boolean
                      required:
                      - host
                      type: object
                    inheritValidatorGasPrice:
                      description: |-
                        Whether these nodes should inherit gas price from validator (if there is not configured on this ChainNodeSet)
                        Defaults to `true`.
                      type: boolean
                    instances:
                      default: 1
                      description: Number of ChainNode instances to run on this group.
                      minimum: 0
                      type: integer
                    name:
                      description: Name of this group.
                      type: string
                    nodeSelector:
                      additionalProperties:
                        type: string
                      description: |-
                        Selector which must be true for the pod to fit on a node.
                        Selector which must match a node's labels for the pod to be scheduled on that node.
                      type: object
                    overrideVersion:
                      description: |-
                        OverrideVersion will force this group to use the specified version.
                        NOTE: when this is set, cosmopilot will not upgrade the nodes, nor will set the version
                        based on upgrade history. For unsetting this, you will have to do it here and individually
                        per ChainNode
                      type: string
                    pdb:
                      description: Pod Disruption Budget configuration for this group.
                      properties:
                        enabled:
                          description: Enabled specifies whether to deploy a Pod Disruption
                            Budget.
                          type: boolean
                        minAvailable:
                          description: |-
                            MinAvailable indicates minAvailable field set in PDB.
                            Defaults to the number of instances in the group minus 1,
                            i.e. it allows only a single disruption.
                          type: integer
                      required:
                      - enabled
                      type: object
                    peers:
                      description: Additional persistent peers that should be added
                        to these nodes.
                      items:
                        description: Peer represents a peer.
                        properties:
                          address:
                            description: Hostname or IP address of this peer.
                            type: string
                          id:
                            description: Tendermint node ID for this node.
                            type: string
                          port:
                            default: 26656
                            description: P2P port to be used. Defaults to `26656`.
                            type: integer
                          private:
                            description: Indicates this peer is private.
                            type: boolean
                          seed:
                            description: Indicates this is a seed.
                            type: boolean
                          unconditional:
                            description: Indicates this peer is unconditional.
                            type: boolean
                        required:
                        - address
                        - id
                        type: object
                      type: array
                    persistence:
                      description: |-
                        Configures PVC for persisting data. Automated data snapshots can also be configured in
                        this section.
                      properties:
                        additionalInitCommands:
                          description: |-
                            Additional commands to run on data initialization. Useful for downloading and
                            extracting snapshots.
                            App home is at `/home/app` and data dir is at `/home/app/data`. There is also `/temp`, a temporary volume
                            shared by all init containers.
                          items:
                            description: |-
                              InitCommand represents an initialization command. It may be used for running additional commands
                              on genesis or volume initialization.
                            properties:
                              args:
                                description: Args to be passed to this command.
                                items:
                                  type: string
                                type: array
                              command:
                                description: Command to be used. Defaults to image
                                  entrypoint.
                                items:
                                  type: string
                                type: array
                              image:
                                description: Image to be used to run this command.
                                  Defaults to app image.
                                type: string
                            required:
                            - args
                            type: object
                          type: array
                        autoResize:
                          default: true
                          description: |-
                            Automatically resize PVC.
                            Defaults to `true`.
                          type: boolean
                        autoResizeIncrement:
                          default: 50Gi
                          description: |-
                            Increment size on each auto-resize event.
                            Defaults to `50Gi`.
                          type: string
                        autoResizeMaxSize:
                          default: 2Ti
                          description: |-
                            Size at which auto-resize will stop incrementing PVC size.
                            Defaults to `2Ti`.
                          type: string
                        autoResizeThreshold:
                          default: 80
                          description: |-
                            Percentage of data usage at which an auto-resize event should occur.
                            Defaults to `80`.
                          type: integer
                        initTimeout:
                          description: Time to wait for data initialization pod to
                            be successful. Defaults to `5m`.
                          type: string
                        restoreFromSnapshot:
                          description: Restore from the specified snapshot when creating
                            the PVC for this node.
                          properties:
                            name:
                              description: Name of the volume snapshot being referenced.
                              type: string
                          required:
                          - name
                          type: object
                        size:
                          default: 50Gi
                          description: |-
                            Size of the persistent volume for storing data. Can't be updated when autoResize is enabled.
                            Defaults to `50Gi`.
                          type: string
                        snapshots:
                          description: Whether cosmopilot should create volume snapshots
                            according to this config.
                          properties:
                            disableWhileSyncing:
                              default: true
                              description: Whether to disable snapshots while the
                                node is syncing. Defaults to `true`.
                              type: boolean
                            exportTarball:
                              description: Whether to create a tarball of data directory
                                in each snapshot and upload it to external storage.
                              properties:
                                deleteOnExpire:
                                  default: false
                                  description: Whether to delete the tarball when
                                    the snapshot expires. Default is `false`.
                                  type: boolean
                                gcs:
                                  description: Configuration to upload tarballs to
                                    a GCS bucket.
                                  properties:
                                    bucket:
                                      description: Name of the bucket to upload tarballs
                                        to.
                                      type: string
                                    bufferSize:
                                      description: Size of the buffer when streaming
                                        data to GCS. Defaults to `32MB`.
                                      type: string
                                    chunkSize:
                                      description: Size of each chunk uploaded in
                                        parallel to GCS. Defaults to `250MB`.
                                      type: string
                                    concurrentJobs:
                                      description: Number of concurrent upload or
                                        delete jobs. Defaults to `10`.
                                      type: integer
                                    credentialsSecret:
                                      description: Secret with the JSON credentials
                                        to upload to bucket.
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |-
                                            Name of the referent.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    partSize:
                                      description: Size of each part when size-limit
                                        is crossed. Defaults to `500GB`.
                                      type: string
                                    sizeLimit:
                                      description: Size limit at which the file will
                                        be split into multiple parts. Defaults to
                                        `5TB`.
                                      type: string
                                  required:
                                  - bucket
                                  - credentialsSecret
                                  type: object
                                suffix:
                                  description: Suffix to add to archive name. The
                                    name of the tarball will be `<chain-id>-<timestamp>-<suffix>`.
                                  type: string
                              type: object
                            frequency:
                              description: How often a snapshot should be created.
                              format: duration
                              type: string
                            resources:
                              description: Compute resources for the integrity-check
                                job pod (applied only when `verify` is true).
                              properties:
                                claims:
                                  description: |-
                                    Claims lists the names of resources, defined in spec.resourceClaims,
                                    that are used by this container.

                                    This is an alpha field and requires enabling the
                                    DynamicResourceAllocation feature gate.

                                    This field is immutable. It can only be set for containers.
                                  items:
                                    description: ResourceClaim references one entry
                                      in PodSpec.ResourceClaims.
                                    properties:
                                      name:
                                        description: |-
                                          Name must match the name of one entry in pod.spec.resourceClaims of
                                          the Pod where this field is used. It makes that resource available
                                          inside a container.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                              type: object
                            retention:
                              description: How long a snapshot should be retained.
                                Default is indefinite retention.
                              format: duration
                              type: string
                            snapshotClass:
                              description: Name of the volume snapshot class to be
                                used. Uses the default class if not specified.
                              type: string
                            stopNode:
                              default: false
                              description: Whether the node should be stopped while
                                the snapshot is taken. Defaults to `false`.
                              type: boolean
                            verify:
                              default: false
                              description: Whether cosmopilot should verify the snapshot
                                for corruption after it is ready. Defaults to `false`.
                              type: boolean
                          required:
                          - frequency
                          type: object
                        storageClass:
                          description: |-
                            Name of the storage class to use for the PVC. Uses the default class if not specified.
                            to create persistent volumes.
                          type: string
                      type: object
                    resources:
                      description: Compute Resources required by the app container.
                      properties:
                        claims:
                          description: |-
                            Claims lists the names of resources, defined in spec.resourceClaims,
                            that are used by this container.

                            This is an alpha field and requires enabling the
                            DynamicResourceAllocation feature gate.

                            This field is immutable. It can only be set for containers.
                          items:
                            description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                            properties:
                              name:
                                description: |-
                                  Name must match the name of one entry in pod.spec.resourceClaims of
                                  the Pod where this field is used. It makes that resource available
                                  inside a container.
                                type: string
                            required:
                            - name
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                          - name
                          x-kubernetes-list-type: map
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Limits describes the maximum amount of compute resources allowed.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: |-
                            Requests describes the minimum amount of compute resources required.
                            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                            otherwise to an implementation-defined value. Requests cannot exceed Limits.
                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                          type: object
                      type: object
                    snapshotNodeIndex:
                      default: 0
                      description: |-
                        Index of the node in the group to take volume snapshots from (if enabled).
                        Defaults to `0`.
                      minimum: 0
                      type: integer
                    stateSyncRestore:
                      description: |-
                        Configures these nodes to find state-sync snapshots on the network and restore from it.
                        This is disabled by default.
                      type: boolean
                    vpa:
                      description: Vertical Pod Autoscaling configuration for this
                        node.
                      properties:
                        cpu:
                          description: CPU resource autoscaling configuration.
                          properties:
                            cooldown:
                              default: 5m
                              description: |-
                                Cooldown is the minimum duration to wait between consecutive scaling actions.
                                Defaults to "5m".
                              format: duration
                              type: string
                            limitPercentage:
                              description: |-
                                LimitPercentage defines the percentage multiplier to apply when using "percentage" LimitStrategy.
                                For example, 150 means limit = request * 1.5.
                                Only used when LimitStrategy = "percentage". Defaults to `150` when not set.
                              type: integer
                            limitStrategy:
                              default: retain
                              description: |-
                                LimitStrategy controls how resource limits should be updated after autoscaling.
                                Valid values are:
                                `retain` (default) (keep original limits)
                                `equal` (match request value)
                                `max` (use configured VPA Max)
                                `percentage` (request Ã— percentage)
                                `unset` (remove the limits field entirely)
                              enum:
                              - equal
                              - max
                              - percentage
                              - retain
                              - unset
                              type: string
                            max:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Maximum resource value allowed during scaling
                                (e.g. "8000m" or "2Gi").
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            min:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Minimum resource value allowed during scaling
                                (e.g. "100m" or "128Mi").
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            rules:
                              description: Rules define when and how scaling should
                                occur based on sustained usage levels.
                              items:
                                description: VerticalAutoscalingRule defines a single
                                  rule for when to trigger a scaling adjustment.
                                properties:
                                  direction:
                                    description: 'Direction of scaling: "up" or "down".'
                                    enum:
                                    - up
                                    - down
                                    type: string
                                  duration:
                                    default: 5m
                                    description: |-
                                      Duration is the length of time the usage must remain above/below the threshold before scaling.
                                      Defaults to "5m".
                                    format: duration
                                    type: string
                                  stepPercent:
                                    description: |-
                                      StepPercent defines how much to adjust the resource by, as a percentage of the current value.
                                      For example, 50 = scale by 50% of current value.
                                    maximum: 100
                                    minimum: 1
                                    type: integer
                                  usagePercent:
                                    description: |-
                                      UsagePercent is the resource usage percentage (0â€“100) that must be met.
                                      Usage is compared against the selected Source value.
                                    maximum: 100
                                    minimum: 1
                                    type: integer
                                required:
                                - direction
                                - stepPercent
                                - usagePercent
                                type: object
                              type: array
                            source:
                              default: effective-limit
                              description: |-
                                Source determines whether to base autoscaling decisions on requests, limits, or effective limit.
                                Valid values are:
                                `effective-limit` (default) (use limits if set; otherwise fallback to requests)
                                `requests` (use the podâ€™s requested resource value)
                                `limits` (use the podâ€™s resource limit value)
                              enum:
                              - effective-limit
                              - requests
                              - limits
                              type: string
                          required:
                          - max
                          - min
                          - rules
                          type: object
                        enabled:
                          description: Enables vertical autoscaling for the pod.
                          type: boolean
                        memory:
                          description: Memory resource autoscaling configuration.
                          properties:
                            cooldown:
                              default: 5m
                              description: |-
                                Cooldown is the minimum duration to wait between consecutive scaling actions.
                                Defaults to "5m".
                              format: duration
                              type: string
                            limitPercentage:
                              description: |-
                                LimitPercentage defines the percentage multiplier to apply when using "percentage" LimitStrategy.
                                For example, 150 means limit = request * 1.5.
                                Only used when LimitStrategy = "percentage". Defaults to `150` when not set.
                              type: integer
                            limitStrategy:
                              default: retain
                              description: |-
                                LimitStrategy controls how resource limits should be updated after autoscaling.
                                Valid values are:
                                `retain` (default) (keep original limits)
                                `equal` (match request value)
                                `max` (use configured VPA Max)
                                `percentage` (request Ã— percentage)
                                `unset` (remove the limits field entirely)
                              enum:
                              - equal
                              - max
                              - percentage
                              - retain
                              - unset
                              type: string
                            max:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Maximum resource value allowed during scaling
                                (e.g. "8000m" or "2Gi").
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            min:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Minimum resource value allowed during scaling
                                (e.g. "100m" or "128Mi").
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            rules:
                              description: Rules define when and how scaling should
                                occur based on sustained usage levels.
                              items:
                                description: VerticalAutoscalingRule defines a single
                                  rule for when to trigger a scaling adjustment.
                                properties:
                                  direction:
                                    description: 'Direction of scaling: "up" or "down".'
                                    enum:
                                    - up
                                    - down
                                    type: string
                                  duration:
                                    default: 5m
                                    description: |-
                                      Duration is the length of time the usage must remain above/below the threshold before scaling.
                                      Defaults to "5m".
                                    format: duration
                                    type: string
                                  stepPercent:
                                    description: |-
                                      StepPercent defines how much to adjust the resource by, as a percentage of the current value.
                                      For example, 50 = scale by 50% of current value.
                                    maximum: 100
                                    minimum: 1
                                    type: integer
                                  usagePercent:
                                    description: |-
                                      UsagePercent is the resource usage percentage (0â€“100) that must be met.
                                      Usage is compared against the selected Source value.
                                    maximum: 100
                                    minimum: 1
                                    type: integer
                                required:
                                - direction
                                - stepPercent
                                - usagePercent
                                type: object
                              type: array
                            source:
                              default: effective-limit
                              description: |-
                                Source determines whether to base autoscaling decisions on requests, limits, or effective limit.
                                Valid values are:
                                `effective-limit` (default) (use limits if set; otherwise fallback to requests)
                                `requests` (use the podâ€™s requested resource value)
                                `limits` (use the podâ€™s resource limit value)
                              enum:
                              - effective-limit
                              - requests
                              - limits
                              type: string
                          required:
                          - max
                          - min
                          - rules
                          type: object
                      required:
                      - enabled
                      type: object
                  required:
                  - name
                  type: object
                type: array
              validator:
                description: Indicates this node set will run a validator and allows
                  configuring it.
                properties:
                  affinity:
                    description: If specified, the pod's scheduling constraints.
                    properties:
                      nodeAffinity:
                        description: Describes node affinity scheduling rules for
                          the pod.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              The scheduler will prefer to schedule pods to nodes that satisfy
                              the affinity expressions specified by this field, but it may choose
                              a node that violates one or more of the expressions. The node that is
                              most preferred is the one with the greatest sum of weights, i.e.
                              for each node that meets all of the scheduling requirements (resource
                              request, requiredDuringScheduling affinity expressions, etc.),
                              compute a sum by iterating through the elements of this field and adding
                              "weight" to the sum if the node matches the corresponding matchExpressions; the
                              node(s) with the highest sum are the most preferred.
                            items:
                              description: |-
                                An empty preferred scheduling term matches all objects with implicit weight 0
                                (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                              properties:
                                preference:
                                  description: A node selector term, associated with
                                    the corresponding weight.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: |-
                                          A node selector requirement is a selector that contains values, a key, and an operator
                                          that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              Represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: |-
                                              An array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will be interpreted as an integer.
                                              This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: |-
                                          A node selector requirement is a selector that contains values, a key, and an operator
                                          that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              Represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: |-
                                              An array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will be interpreted as an integer.
                                              This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-map-type: atomic
                                weight:
                                  description: Weight associated with matching the
                                    corresponding nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - preference
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              If the affinity requirements specified by this field are not met at
                              scheduling time, the pod will not be scheduled onto the node.
                              If the affinity requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to an update), the system
                              may or may not try to eventually evict the pod from its node.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms.
                                  The terms are ORed.
                                items:
                                  description: |-
                                    A null or empty node selector term matches no objects. The requirements of
                                    them are ANDed.
                                    The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: |-
                                          A node selector requirement is a selector that contains values, a key, and an operator
                                          that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              Represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: |-
                                              An array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will be interpreted as an integer.
                                              This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: |-
                                          A node selector requirement is a selector that contains values, a key, and an operator
                                          that relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              Represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: |-
                                              An array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will be interpreted as an integer.
                                              This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            required:
                            - nodeSelectorTerms
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      podAffinity:
                        description: Describes pod affinity scheduling rules (e.g.
                          co-locate this pod in the same node, zone, etc. as some
                          other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              The scheduler will prefer to schedule pods to nodes that satisfy
                              the affinity expressions specified by this field, but it may choose
                              a node that violates one or more of the expressions. The node that is
                              most preferred is the one with the greatest sum of weights, i.e.
                              for each node that meets all of the scheduling requirements (resource
                              request, requiredDuringScheduling affinity expressions, etc.),
                              compute a sum by iterating through the elements of this field and adding
                              "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                              node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: |-
                                        A label query over a set of resources, in this case pods.
                                        If it's null, this PodAffinityTerm matches with no Pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: |-
                                        MatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                        Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    mismatchLabelKeys:
                                      description: |-
                                        MismatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                        Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    namespaceSelector:
                                      description: |-
                                        A label query over the set of namespaces that the term applies to.
                                        The term is applied to the union of the namespaces selected by this field
                                        and the ones listed in the namespaces field.
                                        null selector and null or empty namespaces list means "this pod's namespace".
                                        An empty selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: |-
                                        namespaces specifies a static list of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces listed in this field
                                        and the ones selected by namespaceSelector.
                                        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches that of any node on which any of the
                                        selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: |-
                                    weight associated with matching the corresponding podAffinityTerm,
                                    in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              If the affinity requirements specified by this field are not met at
                              scheduling time, the pod will not be scheduled onto the node.
                              If the affinity requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod label update), the
                              system may or may not try to eventually evict the pod from its node.
                              When there are multiple elements, the lists of nodes corresponding to each
                              podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            items:
                              description: |-
                                Defines a set of pods (namely those matching the labelSelector
                                relative to the given namespace(s)) that this pod should be
                                co-located (affinity) or not co-located (anti-affinity) with,
                                where co-located is defined as running on a node whose value of
                                the label with key <topologyKey> matches that of any node on which
                                a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                    Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                    Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                      podAntiAffinity:
                        description: Describes pod anti-affinity scheduling rules
                          (e.g. avoid putting this pod in the same node, zone, etc.
                          as some other pod(s)).
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              The scheduler will prefer to schedule pods to nodes that satisfy
                              the anti-affinity expressions specified by this field, but it may choose
                              a node that violates one or more of the expressions. The node that is
                              most preferred is the one with the greatest sum of weights, i.e.
                              for each node that meets all of the scheduling requirements (resource
                              request, requiredDuringScheduling anti-affinity expressions, etc.),
                              compute a sum by iterating through the elements of this field and adding
                              "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                              node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred
                                node(s)
                              properties:
                                podAffinityTerm:
                                  description: Required. A pod affinity term, associated
                                    with the corresponding weight.
                                  properties:
                                    labelSelector:
                                      description: |-
                                        A label query over a set of resources, in this case pods.
                                        If it's null, this PodAffinityTerm matches with no Pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    matchLabelKeys:
                                      description: |-
                                        MatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                        Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    mismatchLabelKeys:
                                      description: |-
                                        MismatchLabelKeys is a set of pod label keys to select which pods will
                                        be taken into consideration. The keys are used to lookup values from the
                                        incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                        to select the group of existing pods which pods will be taken into consideration
                                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                        pod labels will be ignored. The default value is empty.
                                        The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                        Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    namespaceSelector:
                                      description: |-
                                        A label query over the set of namespaces that the term applies to.
                                        The term is applied to the union of the namespaces selected by this field
                                        and the ones listed in the namespaces field.
                                        null selector and null or empty namespaces list means "this pod's namespace".
                                        An empty selector ({}) matches all namespaces.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list
                                            of label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: |-
                                              A label selector requirement is a selector that contains values, a key, and an operator that
                                              relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key
                                                  that the selector applies to.
                                                type: string
                                              operator:
                                                description: |-
                                                  operator represents a key's relationship to a set of values.
                                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: |-
                                                  values is an array of string values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: |-
                                        namespaces specifies a static list of namespace names that the term applies to.
                                        The term is applied to the union of the namespaces listed in this field
                                        and the ones selected by namespaceSelector.
                                        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: |-
                                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches that of any node on which any of the
                                        selected pods is running.
                                        Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                weight:
                                  description: |-
                                    weight associated with matching the corresponding podAffinityTerm,
                                    in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - podAffinityTerm
                              - weight
                              type: object
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: |-
                              If the anti-affinity requirements specified by this field are not met at
                              scheduling time, the pod will not be scheduled onto the node.
                              If the anti-affinity requirements specified by this field cease to be met
                              at some point during pod execution (e.g. due to a pod label update), the
                              system may or may not try to eventually evict the pod from its node.
                              When there are multiple elements, the lists of nodes corresponding to each
                              podAffinityTerm are intersected, i.e. all terms must be satisfied.
                            items:
                              description: |-
                                Defines a set of pods (namely those matching the labelSelector
                                relative to the given namespace(s)) that this pod should be
                                co-located (affinity) or not co-located (anti-affinity) with,
                                where co-located is defined as running on a node whose value of
                                the label with key <topologyKey> matches that of any node on which
                                a pod of the set of pods is running
                              properties:
                                labelSelector:
                                  description: |-
                                    A label query over a set of resources, in this case pods.
                                    If it's null, this PodAffinityTerm matches with no Pods.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                matchLabelKeys:
                                  description: |-
                                    MatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                    Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                mismatchLabelKeys:
                                  description: |-
                                    MismatchLabelKeys is a set of pod label keys to select which pods will
                                    be taken into consideration. The keys are used to lookup values from the
                                    incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                                    to select the group of existing pods which pods will be taken into consideration
                                    for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                    pod labels will be ignored. The default value is empty.
                                    The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                                    Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                                    This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                namespaceSelector:
                                  description: |-
                                    A label query over the set of namespaces that the term applies to.
                                    The term is applied to the union of the namespaces selected by this field
                                    and the ones listed in the namespaces field.
                                    null selector and null or empty namespaces list means "this pod's namespace".
                                    An empty selector ({}) matches all namespaces.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label
                                        selector requirements. The requirements are
                                        ANDed.
                                      items:
                                        description: |-
                                          A label selector requirement is a selector that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that
                                              the selector applies to.
                                            type: string
                                          operator:
                                            description: |-
                                              operator represents a key's relationship to a set of values.
                                              Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: |-
                                              values is an array of string values. If the operator is In or NotIn,
                                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                              the values array must be empty. This array is replaced during a strategic
                                              merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: |-
                                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: |-
                                    namespaces specifies a static list of namespace names that the term applies to.
                                    The term is applied to the union of the namespaces listed in this field
                                    and the ones selected by namespaceSelector.
                                    null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: |-
                                    This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                    whose value of the label with key topologyKey matches that of any node on which any of the
                                    selected pods is running.
                                    Empty topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                              type: object
                            type: array
                        type: object
                    type: object
                  config:
                    description: Allows setting specific configurations for the validator.
                    properties:
                      blockThreshold:
                        default: 15s
                        description: |-
                          The time to wait for a block before considering node unhealthy.
                          Defaults to `15s`.
                        format: duration
                        type: string
                      cosmoGuard:
                        description: Deploys CosmoGuard to protect API endpoints of
                          the node.
                        properties:
                          config:
                            description: ConfigMap containing the CosmoGuard configuration
                              for this node.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its
                                  key must be defined
                                type: boolean
                            required:
                            - key
                            type: object
                            x-kubernetes-map-type: atomic
                          enable:
                            description: Whether to enable CosmoGuard on this node.
                            type: boolean
                          resources:
                            description: Compute Resources for CosmoGuard container.
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.

                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.

                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          restartPodOnFailure:
                            description: Whether the node's pod should be restarted
                              when CosmoGuard fails.
                            type: boolean
                        required:
                        - config
                        - enable
                        type: object
                      dashedConfigToml:
                        description: Whether field naming in config.toml should use
                          dashes instead of underscores. Defaults to `false`.
                        type: boolean
                      env:
                        description: List of environment variables to set in the app
                          container.
                        items:
                          description: EnvVar represents an environment variable present
                            in a Container.
                          properties:
                            name:
                              description: Name of the environment variable. Must
                                be a C_IDENTIFIER.
                              type: string
                            value:
                              description: |-
                                Variable references $(VAR_NAME) are expanded
                                using the previously defined environment variables in the container and
                                any service environment variables. If a variable cannot be resolved,
                                the reference in the input string will be unchanged. Double $$ are reduced
                                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                Escaped references will never be expanded, regardless of whether the variable
                                exists or not.
                                Defaults to "".
                              type: string
                            valueFrom:
                              description: Source for the environment variable's value.
                                Cannot be used if value is not empty.
                              properties:
                                configMapKeyRef:
                                  description: Selects a key of a ConfigMap.
                                  properties:
                                    key:
                                      description: The key to select.
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the ConfigMap or
                                        its key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                                fieldRef:
                                  description: |-
                                    Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                    spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                  properties:
                                    apiVersion:
                                      description: Version of the schema the FieldPath
                                        is written in terms of, defaults to "v1".
                                      type: string
                                    fieldPath:
                                      description: Path of the field to select in
                                        the specified API version.
                                      type: string
                                  required:
                                  - fieldPath
                                  type: object
                                  x-kubernetes-map-type: atomic
                                resourceFieldRef:
                                  description: |-
                                    Selects a resource of the container: only resources limits and requests
                                    (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                  properties:
                                    containerName:
                                      description: 'Container name: required for volumes,
                                        optional for env vars'
                                      type: string
                                    divisor:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: Specifies the output format of
                                        the exposed resources, defaults to "1"
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                    resource:
                                      description: 'Required: resource to select'
                                      type: string
                                  required:
                                  - resource
                                  type: object
                                  x-kubernetes-map-type: atomic
                                secretKeyRef:
                                  description: Selects a key of a secret in the pod's
                                    namespace
                                  properties:
                                    key:
                                      description: The key of the secret to select
                                        from.  Must be a valid secret key.
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    optional:
                                      description: Specify whether the Secret or its
                                        key must be defined
                                      type: boolean
                                  required:
                                  - key
                                  type: object
                                  x-kubernetes-map-type: atomic
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      evmEnabled:
                        description: Whether EVM is enabled on this node. Will add
                          evm-rpc port to services. Defaults to `false`.
                        type: boolean
                      haltHeight:
                        description: |-
                          The block height at which the node should stop.
                          Cosmopilot will not attempt to restart the node beyond this height.
                        format: int64
                        type: integer
                      ignoreSyncing:
                        description: |-
                          Marks the node as ready even when it is catching up. This is useful when a chain
                          is halted, but you still need the node to be ready for querying existing data.
                          Defaults to `false`.
                        type: boolean
                      imagePullSecrets:
                        description: Optional list of references to secrets in the
                          same namespace to use for pulling any of the images used
                          by this node.
                        items:
                          description: |-
                            LocalObjectReference contains enough information to let you locate the
                            referenced object inside the same namespace.
                          properties:
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      nodeUtilsLogLevel:
                        description: Log level for node-utils container. Defaults
                          to `info`.
                        type: string
                      nodeUtilsResources:
                        description: Compute Resources for node-utils container.
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      override:
                        description: Allows overriding configs on `.toml` configuration
                          files.
                        x-kubernetes-preserve-unknown-fields: true
                      persistAddressBook:
                        description: Whether to persist address book file in data
                          directory. Defaults to `false`.
                        type: boolean
                      reconcilePeriod:
                        default: 15s
                        description: |-
                          Period at which a reconcile loop will happen for this ChainNode.
                          Defaults to `15s`.
                        format: duration
                        type: string
                      runFlags:
                        description: List of flags to be appended to app container
                          when starting the node.
                        items:
                          type: string
                        type: array
                      safeToEvict:
                        description: |-
                          SafeToEvict sets cluster-autoscaler.kubernetes.io/safe-to-evict annotation to the given value. It allows/disallows
                          cluster-autoscaler to evict this node's pod.
                        type: boolean
                      seedMode:
                        default: false
                        description: Configures this node to run on seed mode. Defaults
                          to `false`.
                        type: boolean
                      sidecars:
                        description: Allows configuring additional containers to run
                          alongside the node.
                        items:
                          description: SidecarSpec allows configuring additional containers
                            to run alongside the node.
                          properties:
                            args:
                              description: Args to be passed to this container. Defaults
                                to cmd defined in image.
                              items:
                                type: string
                              type: array
                            command:
                              description: Command to be run by this container. Defaults
                                to entrypoint defined in image.
                              items:
                                type: string
                              type: array
                            env:
                              description: Environment variables to be passed to this
                                container.
                              items:
                                description: EnvVar represents an environment variable
                                  present in a Container.
                                properties:
                                  name:
                                    description: Name of the environment variable.
                                      Must be a C_IDENTIFIER.
                                    type: string
                                  value:
                                    description: |-
                                      Variable references $(VAR_NAME) are expanded
                                      using the previously defined environment variables in the container and
                                      any service environment variables. If a variable cannot be resolved,
                                      the reference in the input string will be unchanged. Double $$ are reduced
                                      to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                                      "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                                      Escaped references will never be expanded, regardless of whether the variable
                                      exists or not.
                                      Defaults to "".
                                    type: string
                                  valueFrom:
                                    description: Source for the environment variable's
                                      value. Cannot be used if value is not empty.
                                    properties:
                                      configMapKeyRef:
                                        description: Selects a key of a ConfigMap.
                                        properties:
                                          key:
                                            description: The key to select.
                                            type: string
                                          name:
                                            description: |-
                                              Name of the referent.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      fieldRef:
                                        description: |-
                                          Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                          spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                        properties:
                                          apiVersion:
                                            description: Version of the schema the
                                              FieldPath is written in terms of, defaults
                                              to "v1".
                                            type: string
                                          fieldPath:
                                            description: Path of the field to select
                                              in the specified API version.
                                            type: string
                                        required:
                                        - fieldPath
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      resourceFieldRef:
                                        description: |-
                                          Selects a resource of the container: only resources limits and requests
                                          (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                        properties:
                                          containerName:
                                            description: 'Container name: required
                                              for volumes, optional for env vars'
                                            type: string
                                          divisor:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            description: Specifies the output format
                                              of the exposed resources, defaults to
                                              "1"
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          resource:
                                            description: 'Required: resource to select'
                                            type: string
                                        required:
                                        - resource
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      secretKeyRef:
                                        description: Selects a key of a secret in
                                          the pod's namespace
                                        properties:
                                          key:
                                            description: The key of the secret to
                                              select from.  Must be a valid secret
                                              key.
                                            type: string
                                          name:
                                            description: |-
                                              Name of the referent.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the Secret
                                              or its key must be defined
                                            type: boolean
                                        required:
                                        - key
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                required:
                                - name
                                type: object
                              type: array
                            image:
                              description: |-
                                Container image to be used.
                                Defaults to app image being used by ChainNode.
                              minLength: 1
                              type: string
                            imagePullPolicy:
                              description: |-
                                Indicates the desired pull policy when creating nodes. Defaults to `Always` if `version`
                                is `latest` and `IfNotPresent` otherwise.
                              type: string
                            mountConfig:
                              description: Directory where config files from ConfigMap
                                will be mounted on this container. They are not mounted
                                if not specified.
                              type: string
                            mountDataVolume:
                              description: Where data volume will be mounted on this
                                container. It is not mounted if not specified.
                              type: string
                            name:
                              description: Name to be assigned to the container.
                              minLength: 1
                              type: string
                            resources:
                              description: Compute Resources for the sidecar container.
                              properties:
                                claims:
                                  description: |-
                                    Claims lists the names of resources, defined in spec.resourceClaims,
                                    that are used by this container.

                                    This is an alpha field and requires enabling the
                                    DynamicResourceAllocation feature gate.

                                    This field is immutable. It can only be set for containers.
                                  items:
                                    description: ResourceClaim references one entry
                                      in PodSpec.ResourceClaims.
                                    properties:
                                      name:
                                        description: |-
                                          Name must match the name of one entry in pod.spec.resourceClaims of
                                          the Pod where this field is used. It makes that resource available
                                          inside a container.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                  type: object
                              type: object
                            restartPodOnFailure:
                              description: Whether the pod of this node should be
                                restarted when this sidecar container fails. Defaults
                                to `false`.
                              type: boolean
                            runBeforeNode:
                              description: |-
                                When enabled, this container turns into an init container instead of a sidecar
                                as it will have to finish before the node container starts. Defaults to `false`.
                              type: boolean
                            securityContext:
                              description: Security options the container should be
                                run with.
                              properties:
                                allowPrivilegeEscalation:
                                  description: |-
                                    AllowPrivilegeEscalation controls whether a process can gain more
                                    privileges than its parent process. This bool directly controls if
                                    the no_new_privs flag will be set on the container process.
                                    AllowPrivilegeEscalation is true always when the container is:
                                    1) run as Privileged
                                    2) has CAP_SYS_ADMIN
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: boolean
                                capabilities:
                                  description: |-
                                    The capabilities to add/drop when running containers.
                                    Defaults to the default set of capabilities granted by the container runtime.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    add:
                                      description: Added capabilities
                                      items:
                                        description: Capability represent POSIX capabilities
                                          type
                                        type: string
                                      type: array
                                    drop:
                                      description: Removed capabilities
                                      items:
                                        description: Capability represent POSIX capabilities
                                          type
                                        type: string
                                      type: array
                                  type: object
                                privileged:
                                  description: |-
                                    Run container in privileged mode.
                                    Processes in privileged containers are essentially equivalent to root on the host.
                                    Defaults to false.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: boolean
                                procMount:
                                  description: |-
                                    procMount denotes the type of proc mount to use for the containers.
                                    The default is DefaultProcMount which uses the container runtime defaults for
                                    readonly paths and masked paths.
                                    This requires the ProcMountType feature flag to be enabled.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: string
                                readOnlyRootFilesystem:
                                  description: |-
                                    Whether this container has a read-only root filesystem.
                                    Default is false.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  type: boolean
                                runAsGroup:
                                  description: |-
                                    The GID to run the entrypoint of the container process.
                                    Uses runtime default if unset.
                                    May also be set in PodSecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                runAsNonRoot:
                                  description: |-
                                    Indicates that the container must run as a non-root user.
                                    If true, the Kubelet will validate the image at runtime to ensure that it
                                    does not run as UID 0 (root) and fail to start the container if it does.
                                    If unset or false, no such validation will be performed.
                                    May also be set in PodSecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                  type: boolean
                                runAsUser:
                                  description: |-
                                    The UID to run the entrypoint of the container process.
                                    Defaults to user specified in image metadata if unspecified.
                                    May also be set in PodSecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  format: int64
                                  type: integer
                                seLinuxOptions:
                                  description: |-
                                    The SELinux context to be applied to the container.
                                    If unspecified, the container runtime will allocate a random SELinux context for each
                                    container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
                                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    level:
                                      description: Level is SELinux level label that
                                        applies to the container.
                                      type: string
                                    role:
                                      description: Role is a SELinux role label that
                                        applies to the container.
                                      type: string
                                    type:
                                      description: Type is a SELinux type label that
                                        applies to the container.
                                      type: string
                                    user:
                                      description: User is a SELinux user label that
                                        applies to the container.
                                      type: string
                                  type: object
                                seccompProfile:
                                  description: |-
                                    The seccomp options to use by this container. If seccomp options are
                                    provided at both the pod & container level, the container options
                                    override the pod options.
                                    Note that this field cannot be set when spec.os.name is windows.
                                  properties:
                                    localhostProfile:
                                      description: |-
                                        localhostProfile indicates a profile defined in a file on the node should be used.
                                        The profile must be preconfigured on the node to work.
                                        Must be a descending path, relative to the kubelet's configured seccomp profile location.
                                        Must be set if type is "Localhost". Must NOT be set for any other type.
                                      type: string
                                    type:
                                      description: |-
                                        type indicates which kind of seccomp profile will be applied.
                                        Valid options are:

                                        Localhost - a profile defined in a file on the node should be used.
                                        RuntimeDefault - the container runtime default profile should be used.
                                        Unconfined - no profile should be applied.
                                      type: string
                                  required:
                                  - type
                                  type: object
                                windowsOptions:
                                  description: |-
                                    The Windows specific settings applied to all containers.
                                    If unspecified, the options from the PodSecurityContext will be used.
                                    If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
                                    Note that this field cannot be set when spec.os.name is linux.
                                  properties:
                                    gmsaCredentialSpec:
                                      description: |-
                                        GMSACredentialSpec is where the GMSA admission webhook
                                        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                                        GMSA credential spec named by the GMSACredentialSpecName field.
                                      type: string
                                    gmsaCredentialSpecName:
                                      description: GMSACredentialSpecName is the name
                                        of the GMSA credential spec to use.
                                      type: string
                                    hostProcess:
                                      description: |-
                                        HostProcess determines if a container should be run as a 'Host Process' container.
                                        All of a Pod's containers must have the same effective HostProcess value
                                        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                                        In addition, if HostProcess is true then HostNetwork must also be set to true.
                                      type: boolean
                                    runAsUserName:
                                      description: |-
                                        The UserName in Windows to run the entrypoint of the container process.
                                        Defaults to the user specified in image metadata if unspecified.
                                        May also be set in PodSecurityContext. If set in both SecurityContext and
                                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                                      type: string
                                  type: object
                              type: object
                          required:
                          - name
                          type: object
                        type: array
                      startupTime:
                        default: 1h
                        description: |-
                          The time after which a node will be restarted if it does not start properly.
                          Defaults to `1h`.
                        format: duration
                        type: string
                      stateSync:
                        description: Allows configuring this node to perform state-sync
                          snapshots.
                        properties:
                          snapshotInterval:
                            description: Block interval at which local state sync
                              snapshots are taken (0 to disable).
                            type: integer
                          snapshotKeepRecent:
                            description: Number of recent snapshots to keep and serve
                              (0 to keep all). Defaults to 2.
                            type: integer
                        required:
                        - snapshotInterval
                        type: object
                      terminationGracePeriodSeconds:
                        description: Optional duration in seconds the pod needs to
                          terminate gracefully.
                        format: int64
                        type: integer
                      volumes:
                        description: Additional volumes to be created and mounted
                          on this node.
                        items:
                          description: VolumeSpec describes an additional volume to
                            mount on a node.
                          properties:
                            deleteWithNode:
                              description: Whether this volume should be deleted when
                                node is deleted. Defaults to `false`.
                              type: boolean
                            name:
                              description: The name of the volume.
                              type: string
                            path:
                              description: Path specifies where this volume should
                                be mounted.
                              type: string
                            size:
                              description: Size of the volume.
                              type: string
                            storageClass:
                              description: Name of the storage class to use for this
                                volume. Uses the default class if not specified.
                              type: string
                          required:
                          - name
                          - path
                          - size
                          type: object
                        type: array
                    type: object
                  createValidator:
                    description: Indicates cosmopilot should run create-validator
                      tx to make this node a validator.
                    properties:
                      accountHDPath:
                        default: m/44'/118'/0'/0/0
                        description: HD path of accounts. Defaults to `m/44'/118'/0'/0/0`.
                        type: string
                      accountMnemonicSecret:
                        description: |-
                          Name of the secret containing the mnemonic of the account to be used by
                          this validator. Defaults to `<chainnode>-account`. Will be created if it does not exist.
                        type: string
                      accountPrefix:
                        default: nibi
                        description: Prefix for accounts. Defaults to `nibi`.
                        type: string
                      commissionMaxChangeRate:
                        default: "0.1"
                        description: Maximum commission change rate percentage (per
                          day). Defaults to `0.1`.
                        type: string
                      commissionMaxRate:
                        default: "0.1"
                        description: Maximum commission rate percentage. Defaults
                          to `0.1`.
                        type: string
                      commissionRate:
                        default: "0.1"
                        description: Initial commission rate percentage. Defaults
                          to `0.1`.
                        type: string
                      gasPrices:
                        description: Gas prices in decimal format to determine the
                          transaction fee.
                        type: string
                      minSelfDelegation:
                        default: "1"
                        description: Minimum self delegation required on the validator.
                          Defaults to `1`.
                        type: string
                      stakeAmount:
                        description: Amount to be staked by this validator.
                        type: string
                      valPrefix:
                        default: nibivaloper
                        description: Prefix for validator operator accounts. Defaults
                          to `nibivaloper`.
                        type: string
                    required:
                    - gasPrices
                    - stakeAmount
                    type: object
                  info:
                    description: Contains information details about the validator.
                    properties:
                      details:
                        description: Details of this validator.
                        type: string
                      identity:
                        description: Identity signature of this validator.
                        type: string
                      moniker:
                        description: Moniker to be used by this validator. Defaults
                          to the ChainNode name.
                        type: string
                      website:
                        description: Website of the validator.
                        type: string
                    type: object
                  ingress:
                    description: |-
                      Indicates if an ingress should be created to access API endpoints of validator node
                      and configures it.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations to be appended to the ingress.
                        type: object
                      disableTLS:
                        description: Whether to disable TLS on ingress resource.
                        type: boolean
                      enableEvmRPC:
                        description: Enable EVM RPC endpoint.
                        type: boolean
                      enableEvmRpcWS:
                        description: Enable EVM RPC Websocket endpoint.
                        type: boolean
                      enableGRPC:
                        description: Enable gRPC endpoint.
                        type: boolean
                      enableLCD:
                        description: Enable LCD endpoint.
                        type: boolean
                      enableRPC:
                        description: Enable RPC endpoint.
                        type: boolean
                      grpcAnnotations:
                        additionalProperties:
                          type: string
                        description: |-
                          GrpcAnnotations to be set on grpc ingress resource.
                          Defaults to nginx annotation `nginx.ingress.kubernetes.io/backend-protocol: GRPC`
                          if nginx ingress class is used.
                        type: object
                      host:
                        description: |-
                          Host in which endpoints will be exposed. Endpoints are exposed on corresponding
                          subdomain of this host. An example host `nodes.example.com` will have endpoints exposed at
                          `rpc.nodes.example.com`, `grpc.nodes.example.com` and `lcd.nodes.example.com`.
                        type: string
                      ingressClass:
                        default: nginx
                        description: IngressClass specifies the ingress class to be
                          used on ingresses
                        type: string
                      tlsSecretName:
                        description: Name of the secret containing TLS certificate.
                        type: string
                      useInternalServices:
                        default: false
                        description: |-
                          UseInternalServices configures Ingress to route traffic directly to the node services,
                          bypassing Cosmoguard and any readiness checks. This is only recommended for debugging
                          or for private/internal traffic (e.g., when accessing the cluster over a VPN).
                        type: boolean
                    required:
                    - host
                    type: object
                  init:
                    description: Specifies configs and initialization commands for
                      creating a new genesis.
                    properties:
                      accountHDPath:
                        default: m/44'/118'/0'/0/0
                        description: HD path of accounts. Defaults to `m/44'/118'/0'/0/0`.
                        type: string
                      accountMnemonicSecret:
                        description: |-
                          Name of the secret containing the mnemonic of the account to be used by
                          this validator. Defaults to `<chainnode>-account`. Will be created if it does not exist.
                        type: string
                      accountPrefix:
                        default: nibi
                        description: Prefix for accounts. Defaults to `nibi`.
                        type: string
                      accounts:
                        description: Accounts specify additional accounts and respective
                          assets to be added to this chain.
                        items:
                          description: AccountAssets represents the assets associated
                            with an account.
                          properties:
                            address:
                              description: Address of the account.
                              type: string
                            assets:
                              description: Assets assigned to this account.
                              items:
                                type: string
                              type: array
                          required:
                          - address
                          - assets
                          type: object
                        type: array
                      additionalInitCommands:
                        description: |-
                          Additional commands to run on genesis initialization.
                          Note: App home is at `/home/app` and `/temp` is a temporary volume shared by all init containers.
                        items:
                          description: |-
                            InitCommand represents an initialization command. It may be used for running additional commands
                            on genesis or volume initialization.
                          properties:
                            args:
                              description: Args to be passed to this command.
                              items:
                                type: string
                              type: array
                            command:
                              description: Command to be used. Defaults to image entrypoint.
                              items:
                                type: string
                              type: array
                            image:
                              description: Image to be used to run this command. Defaults
                                to app image.
                              type: string
                          required:
                          - args
                          type: object
                        type: array
                      assets:
                        description: Assets is the list of tokens and their amounts
                          to be assigned to this validators account.
                        items:
                          type: string
                        type: array
                      chainID:
                        description: ChainID of the chain to initialize.
                        minLength: 1
                        type: string
                      chainNodeAccounts:
                        description: |-
                          List of ChainNodes whose accounts should be included in genesis.
                          NOTE: Cosmopilot will wait for the ChainNodes to exist and have accounts before proceeding.
                        items:
                          description: ChainNodeAssets represents the assets associated
                            with an account from another ChainNode.
                          properties:
                            assets:
                              description: Assets assigned to this account.
                              items:
                                type: string
                              type: array
                            chainNode:
                              description: Name of the ChainNode.
                              type: string
                          required:
                          - assets
                          - chainNode
                          type: object
                        type: array
                      commissionMaxChangeRate:
                        default: "0.1"
                        description: Maximum commission change rate percentage (per
                          day). Defaults to `0.1`.
                        type: string
                      commissionMaxRate:
                        default: "0.1"
                        description: Maximum commission rate percentage. Defaults
                          to `0.1`.
                        type: string
                      commissionRate:
                        default: "0.1"
                        description: Initial commission rate percentage. Defaults
                          to `0.1`.
                        type: string
                      minSelfDelegation:
                        default: "1"
                        description: |-
                          Minimum self delegation required on the validator. Defaults to `1`.
                          NOTE: In most chains this is a required flag. However, in a few other chains (Cosmos Hub for example),
                          this flag does not even exist anymore. In those cases, set it to an empty string and cosmopilot will skip it.
                        type: string
                      stakeAmount:
                        description: Amount to be staked by this validator.
                        type: string
                      unbondingTime:
                        default: 1814400s
                        description: Time required to totally unbond delegations.
                          Defaults to `1814400s` (21 days).
                        format: duration
                        type: string
                      valPrefix:
                        default: nibivaloper
                        description: Prefix for validator operator accounts. Defaults
                          to `nibivaloper`.
                        type: string
                      votingPeriod:
                        default: 120h
                        description: Voting period for this chain. Defaults to `120h`.
                        format: duration
                        type: string
                    required:
                    - assets
                    - chainID
                    - stakeAmount
                    type: object
                  nodeSelector:
                    additionalProperties:
                      type: string
                    description: |-
                      Selector which must be true for the pod to fit on a node.
                      Selector which must match a node's labels for the pod to be scheduled on that node.
                    type: object
                  overrideVersion:
                    description: |-
                      OverrideVersion will force validator to use the specified version.
                      NOTE: when this is set, cosmopilot will not upgrade the node, nor will set the version
                      based on upgrade history. For unsetting this, you will have to do it here and on
                      the ChainNode itself.
                    type: string
                  pdb:
                    description: |-
                      Pod Disruption Budget configuration for the validator pod.
                      This is mainly useful in testnets where multiple validators might run in the same namespace.
                      In production mainnet environments, where typically only one validator runs per namespace,
                      this is rarely needed.
                    properties:
                      enabled:
                        description: Enabled specifies whether to deploy a Pod Disruption
                          Budget.
                        type: boolean
                      minAvailable:
                        description: |-
                          MinAvailable indicates minAvailable field set in PDB.
                          Defaults to the number of instances in the group minus 1,
                          i.e. it allows only a single disruption.
                        type: integer
                    required:
                    - enabled
                    type: object
                  persistence:
                    description: |-
                      Configures PVC for persisting data. Automated data snapshots can also be configured in
                      this section.
                    properties:
                      additionalInitCommands:
                        description: |-
                          Additional commands to run on data initialization. Useful for downloading and
                          extracting snapshots.
                          App home is at `/home/app` and data dir is at `/home/app/data`. There is also `/temp`, a temporary volume
                          shared by all init containers.
                        items:
                          description: |-
                            InitCommand represents an initialization command. It may be used for running additional commands
                            on genesis or volume initialization.
                          properties:
                            args:
                              description: Args to be passed to this command.
                              items:
                                type: string
                              type: array
                            command:
                              description: Command to be used. Defaults to image entrypoint.
                              items:
                                type: string
                              type: array
                            image:
                              description: Image to be used to run this command. Defaults
                                to app image.
                              type: string
                          required:
                          - args
                          type: object
                        type: array
                      autoResize:
                        default: true
                        description: |-
                          Automatically resize PVC.
                          Defaults to `true`.
                        type: boolean
                      autoResizeIncrement:
                        default: 50Gi
                        description: |-
                          Increment size on each auto-resize event.
                          Defaults to `50Gi`.
                        type: string
                      autoResizeMaxSize:
                        default: 2Ti
                        description: |-
                          Size at which auto-resize will stop incrementing PVC size.
                          Defaults to `2Ti`.
                        type: string
                      autoResizeThreshold:
                        default: 80
                        description: |-
                          Percentage of data usage at which an auto-resize event should occur.
                          Defaults to `80`.
                        type: integer
                      initTimeout:
                        description: Time to wait for data initialization pod to be
                          successful. Defaults to `5m`.
                        type: string
                      restoreFromSnapshot:
                        description: Restore from the specified snapshot when creating
                          the PVC for this node.
                        properties:
                          name:
                            description: Name of the volume snapshot being referenced.
                            type: string
                        required:
                        - name
                        type: object
                      size:
                        default: 50Gi
                        description: |-
                          Size of the persistent volume for storing data. Can't be updated when autoResize is enabled.
                          Defaults to `50Gi`.
                        type: string
                      snapshots:
                        description: Whether cosmopilot should create volume snapshots
                          according to this config.
                        properties:
                          disableWhileSyncing:
                            default: true
                            description: Whether to disable snapshots while the node
                              is syncing. Defaults to `true`.
                            type: boolean
                          exportTarball:
                            description: Whether to create a tarball of data directory
                              in each snapshot and upload it to external storage.
                            properties:
                              deleteOnExpire:
                                default: false
                                description: Whether to delete the tarball when the
                                  snapshot expires. Default is `false`.
                                type: boolean
                              gcs:
                                description: Configuration to upload tarballs to a
                                  GCS bucket.
                                properties:
                                  bucket:
                                    description: Name of the bucket to upload tarballs
                                      to.
                                    type: string
                                  bufferSize:
                                    description: Size of the buffer when streaming
                                      data to GCS. Defaults to `32MB`.
                                    type: string
                                  chunkSize:
                                    description: Size of each chunk uploaded in parallel
                                      to GCS. Defaults to `250MB`.
                                    type: string
                                  concurrentJobs:
                                    description: Number of concurrent upload or delete
                                      jobs. Defaults to `10`.
                                    type: integer
                                  credentialsSecret:
                                    description: Secret with the JSON credentials
                                      to upload to bucket.
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  partSize:
                                    description: Size of each part when size-limit
                                      is crossed. Defaults to `500GB`.
                                    type: string
                                  sizeLimit:
                                    description: Size limit at which the file will
                                      be split into multiple parts. Defaults to `5TB`.
                                    type: string
                                required:
                                - bucket
                                - credentialsSecret
                                type: object
                              suffix:
                                description: Suffix to add to archive name. The name
                                  of the tarball will be `<chain-id>-<timestamp>-<suffix>`.
                                type: string
                            type: object
                          frequency:
                            description: How often a snapshot should be created.
                            format: duration
                            type: string
                          resources:
                            description: Compute resources for the integrity-check
                              job pod (applied only when `verify` is true).
                            properties:
                              claims:
                                description: |-
                                  Claims lists the names of resources, defined in spec.resourceClaims,
                                  that are used by this container.

                                  This is an alpha field and requires enabling the
                                  DynamicResourceAllocation feature gate.

                                  This field is immutable. It can only be set for containers.
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: |-
                                        Name must match the name of one entry in pod.spec.resourceClaims of
                                        the Pod where this field is used. It makes that resource available
                                        inside a container.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Limits describes the maximum amount of compute resources allowed.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: |-
                                  Requests describes the minimum amount of compute resources required.
                                  If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                  otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                  More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                type: object
                            type: object
                          retention:
                            description: How long a snapshot should be retained. Default
                              is indefinite retention.
                            format: duration
                            type: string
                          snapshotClass:
                            description: Name of the volume snapshot class to be used.
                              Uses the default class if not specified.
                            type: string
                          stopNode:
                            default: false
                            description: Whether the node should be stopped while
                              the snapshot is taken. Defaults to `false`.
                            type: boolean
                          verify:
                            default: false
                            description: Whether cosmopilot should verify the snapshot
                              for corruption after it is ready. Defaults to `false`.
                            type: boolean
                        required:
                        - frequency
                        type: object
                      storageClass:
                        description: |-
                          Name of the storage class to use for the PVC. Uses the default class if not specified.
                          to create persistent volumes.
                        type: string
                    type: object
                  privateKeySecret:
                    description: |-
                      Secret containing the private key to be used by this validator.
                      Defaults to `<chainnode>-priv-key`. Will be created if it does not exist.
                    type: string
                  resources:
                    description: Compute Resources required by the app container.
                    properties:
                      claims:
                        description: |-
                          Claims lists the names of resources, defined in spec.resourceClaims,
                          that are used by this container.

                          This is an alpha field and requires enabling the
                          DynamicResourceAllocation feature gate.

                          This field is immutable. It can only be set for containers.
                        items:
                          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                          properties:
                            name:
                              description: |-
                                Name must match the name of one entry in pod.spec.resourceClaims of
                                the Pod where this field is used. It makes that resource available
                                inside a container.
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      limits:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Limits describes the maximum amount of compute resources allowed.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                      requests:
                        additionalProperties:
                          anyOf:
                          - type: integer
                          - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        description: |-
                          Requests describes the minimum amount of compute resources required.
                          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                          otherwise to an implementation-defined value. Requests cannot exceed Limits.
                          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        type: object
                    type: object
                  stateSyncRestore:
                    description: |-
                      Configures this node to find a state-sync snapshot on the network and restore from it.
                      This is disabled by default.
                    type: boolean
                  tmKMS:
                    description: |-
                      TmKMS configuration for signing commits for this validator.
                      When configured, .spec.validator.privateKeySecret will not be mounted on the validator node.
                    properties:
                      keyFormat:
                        default:
                          account_key_prefix: nibipub
                          consensus_key_prefix: nibivalconspub
                          type: bech32
                        description: |-
                          Format and type of key for chain.
                          Defaults to `{"type": "bech32", "account_key_prefix": "nibipub", "consensus_key_prefix": "nibivalconspub"}`.
                        properties:
                          account_key_prefix:
                            description: AccountKeyPrefix is the prefix used for account
                              keys.
                            type: string
                          consensus_key_prefix:
                            description: ConsensusKeyPrefix is the prefix used for
                              consensus keys.
                            type: string
                          type:
                            description: Type specifies the key format type.
                            type: string
                        required:
                        - account_key_prefix
                        - consensus_key_prefix
                        - type
                        type: object
                      persistState:
                        description: Whether to persist "priv_validator_state.json"
                          file on a PVC. Defaults to `true`.
                        type: boolean
                      provider:
                        description: Signing provider to be used by tmkms. Currently
                          only `vault` is supported.
                        properties:
                          hashicorp:
                            description: Hashicorp provider.
                            properties:
                              address:
                                description: Full address of the Vault cluster.
                                type: string
                              autoRenewToken:
                                description: Whether to automatically renew vault
                                  token. Defaults to `false`.
                                type: boolean
                              certificateSecret:
                                description: Secret containing the CA certificate
                                  of the Vault cluster.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              key:
                                description: Key to be used by this validator.
                                type: string
                              skipCertificateVerify:
                                description: Whether to skip certificate verification.
                                  Defaults to `false`.
                                type: boolean
                              tokenSecret:
                                description: Secret containing the token to be used.
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              uploadGenerated:
                                description: |-
                                  UploadGenerated indicates if the controller should upload the generated private key to vault.
                                  Defaults to `false`. Will be set to `true` if this validator is initializing a new genesis.
                                  This should not be used in production.
                                type: boolean
                            required:
                            - address
                            - key
                            - tokenSecret
                            type: object
                        type: object
                      resources:
                        description: Compute Resources for tmkms container.
                        properties:
                          claims:
                            description: |-
                              Claims lists the names of resources, defined in spec.resourceClaims,
                              that are used by this container.

                              This is an alpha field and requires enabling the
                              DynamicResourceAllocation feature gate.

                              This field is immutable. It can only be set for containers.
                            items:
                              description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                              properties:
                                name:
                                  description: |-
                                    Name must match the name of one entry in pod.spec.resourceClaims of
                                    the Pod where this field is used. It makes that resource available
                                    inside a container.
                                  type: string
                              required:
                              - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Limits describes the maximum amount of compute resources allowed.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: |-
                              Requests describes the minimum amount of compute resources required.
                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                            type: object
                        type: object
                      validatorProtocol:
                        default: v0.34
                        description: |-
                          Tendermint's protocol version to be used.
                          Valid options are:
                          - `v0.34` (default)
                          - `v0.33`
                          - `legacy`
                        type: string
                    required:
                    - provider
                    type: object
                  vpa:
                    description: Vertical Pod Autoscaling configuration for this node.
                    properties:
                      cpu:
                        description: CPU resource autoscaling configuration.
                        properties:
                          cooldown:
                            default: 5m
                            description: |-
                              Cooldown is the minimum duration to wait between consecutive scaling actions.
                              Defaults to "5m".
                            format: duration
                            type: string
                          limitPercentage:
                            description: |-
                              LimitPercentage defines the percentage multiplier to apply when using "percentage" LimitStrategy.
                              For example, 150 means limit = request * 1.5.
                              Only used when LimitStrategy = "percentage". Defaults to `150` when not set.
                            type: integer
                          limitStrategy:
                            default: retain
                            description: |-
                              LimitStrategy controls how resource limits should be updated after autoscaling.
                              Valid values are:
                              `retain` (default) (keep original limits)
                              `equal` (match request value)
                              `max` (use configured VPA Max)
                              `percentage` (request Ã— percentage)
                              `unset` (remove the limits field entirely)
                            enum:
                            - equal
                            - max
                            - percentage
                            - retain
                            - unset
                            type: string
                          max:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Maximum resource value allowed during scaling
                              (e.g. "8000m" or "2Gi").
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          min:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Minimum resource value allowed during scaling
                              (e.g. "100m" or "128Mi").
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          rules:
                            description: Rules define when and how scaling should
                              occur based on sustained usage levels.
                            items:
                              description: VerticalAutoscalingRule defines a single
                                rule for when to trigger a scaling adjustment.
                              properties:
                                direction:
                                  description: 'Direction of scaling: "up" or "down".'
                                  enum:
                                  - up
                                  - down
                                  type: string
                                duration:
                                  default: 5m
                                  description: |-
                                    Duration is the length of time the usage must remain above/below the threshold before scaling.
                                    Defaults to "5m".
                                  format: duration
                                  type: string
                                stepPercent:
                                  description: |-
                                    StepPercent defines how much to adjust the resource by, as a percentage of the current value.
                                    For example, 50 = scale by 50% of current value.
                                  maximum: 100
                                  minimum: 1
                                  type: integer
                                usagePercent:
                                  description: |-
                                    UsagePercent is the resource usage percentage (0â€“100) that must be met.
                                    Usage is compared against the selected Source value.
                                  maximum: 100
                                  minimum: 1
                                  type: integer
                              required:
                              - direction
                              - stepPercent
                              - usagePercent
                              type: object
                            type: array
                          source:
                            default: effective-limit
                            description: |-
                              Source determines whether to base autoscaling decisions on requests, limits, or effective limit.
                              Valid values are:
                              `effective-limit` (default) (use limits if set; otherwise fallback to requests)
                              `requests` (use the podâ€™s requested resource value)
                              `limits` (use the podâ€™s resource limit value)
                            enum:
                            - effective-limit
                            - requests
                            - limits
                            type: string
                        required:
                        - max
                        - min
                        - rules
                        type: object
                      enabled:
                        description: Enables vertical autoscaling for the pod.
                        type: boolean
                      memory:
                        description: Memory resource autoscaling configuration.
                        properties:
                          cooldown:
                            default: 5m
                            description: |-
                              Cooldown is the minimum duration to wait between consecutive scaling actions.
                              Defaults to "5m".
                            format: duration
                            type: string
                          limitPercentage:
                            description: |-
                              LimitPercentage defines the percentage multiplier to apply when using "percentage" LimitStrategy.
                              For example, 150 means limit = request * 1.5.
                              Only used when LimitStrategy = "percentage". Defaults to `150` when not set.
                            type: integer
                          limitStrategy:
                            default: retain
                            description: |-
                              LimitStrategy controls how resource limits should be updated after autoscaling.
                              Valid values are:
                              `retain` (default) (keep original limits)
                              `equal` (match request value)
                              `max` (use configured VPA Max)
                              `percentage` (request Ã— percentage)
                              `unset` (remove the limits field entirely)
                            enum:
                            - equal
                            - max
                            - percentage
                            - retain
                            - unset
                            type: string
                          max:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Maximum resource value allowed during scaling
                              (e.g. "8000m" or "2Gi").
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          min:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Minimum resource value allowed during scaling
                              (e.g. "100m" or "128Mi").
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          rules:
                            description: Rules define when and how scaling should
                              occur based on sustained usage levels.
                            items:
                              description: VerticalAutoscalingRule defines a single
                                rule for when to trigger a scaling adjustment.
                              properties:
                                direction:
                                  description: 'Direction of scaling: "up" or "down".'
                                  enum:
                                  - up
                                  - down
                                  type: string
                                duration:
                                  default: 5m
                                  description: |-
                                    Duration is the length of time the usage must remain above/below the threshold before scaling.
                                    Defaults to "5m".
                                  format: duration
                                  type: string
                                stepPercent:
                                  description: |-
                                    StepPercent defines how much to adjust the resource by, as a percentage of the current value.
                                    For example, 50 = scale by 50% of current value.
                                  maximum: 100
                                  minimum: 1
                                  type: integer
                                usagePercent:
                                  description: |-
                                    UsagePercent is the resource usage percentage (0â€“100) that must be met.
                                    Usage is compared against the selected Source value.
                                  maximum: 100
                                  minimum: 1
                                  type: integer
                              required:
                              - direction
                              - stepPercent
                              - usagePercent
                              type: object
                            type: array
                          source:
                            default: effective-limit
                            description: |-
                              Source determines whether to base autoscaling decisions on requests, limits, or effective limit.
                              Valid values are:
                              `effective-limit` (default) (use limits if set; otherwise fallback to requests)
                              `requests` (use the podâ€™s requested resource value)
                              `limits` (use the podâ€™s resource limit value)
                            enum:
                            - effective-limit
                            - requests
                            - limits
                            type: string
                        required:
                        - max
                        - min
                        - rules
                        type: object
                    required:
                    - enabled
                    type: object
                type: object
            required:
            - app
            - nodes
            type: object
          status:
            description: ChainNodeSetStatus defines the observed state of ChainNodeSet.
            properties:
              appVersion:
                description: The application version currently deployed.
                type: string
              chainID:
                description: Indicates the chain ID.
                type: string
              instances:
                description: Indicates the total number of ChainNode instances on
                  this ChainNodeSet.
                type: integer
              latestHeight:
                description: Last height read on the nodes by cosmopilot.
                format: int64
                type: integer
              nodes:
                description: Nodes available on this nodeset. Excludes validator node.
                items:
                  description: ChainNodeSetNodeStatus contains information about a
                    node running on this ChainNodeSet.
                  properties:
                    address:
                      description: Hostname or IP address to reach this node internally.
                      type: string
                    group:
                      description: Group to which this ChainNode belongs.
                      type: string
                    id:
                      description: ID of this node.
                      type: string
                    name:
                      description: Name of the node.
                      type: string
                    port:
                      description: P2P port for connecting to this node.
                      type: integer
                    public:
                      description: Whether this node can be accessed publicly.
                      type: boolean
                    publicAddress:
                      description: Hostname or IP address to reach this node publicly.
                      type: string
                    publicPort:
                      description: Port to reach this node publicly.
                      type: integer
                    seed:
                      description: Indicates if this node is running in seed mode.
                      type: boolean
                  required:
                  - address
                  - id
                  - name
                  - port
                  - public
                  - seed
                  type: object
                type: array
              phase:
                description: Indicates the current phase for this ChainNodeSet.
                type: string
              pubKey:
                description: Public key of the validator if this ChainNodeSet has
                  one.
                type: string
              seeds:
                description: Status of seed nodes (cosmoseed)
                items:
                  description: SeedStatus contains status information about a cosmoseed
                    node.
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    publicAddress:
                      type: string
                  required:
                  - id
                  - name
                  type: object
                type: array
              upgrades:
                description: All scheduled or completed upgrades performed by cosmopilot
                  on ChainNodes of this ChainNodeSet.
                items:
                  description: Upgrade represents an upgrade processed by cosmopilot
                    and added to status.
                  properties:
                    height:
                      description: Height at which the upgrade should occur.
                      format: int64
                      type: integer
                    image:
                      description: Container image replacement to be used in the upgrade.
                      type: string
                    source:
                      description: Where cosmopilot got this upgrade from.
                      type: string
                    status:
                      description: Upgrade status.
                      type: string
                  required:
                  - height
                  - image
                  - source
                  - status
                  type: object
                type: array
              validatorAddress:
                description: |-
                  Validator address of the validator in this ChainNodeSet if one is available.
                  Omitted when no validator is present in the ChainNodeSet.
                type: string
              validatorStatus:
                description: Current status of validator if this ChainNodeSet has
                  one.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
